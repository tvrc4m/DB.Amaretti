@model dynamic

@if (Html.ValidationSummary() != null)
{
    <div class="alert alert-icon alert-dismissible alert-border-color">
        <div class="icon"><span class="icon s7-close-circle"></span></div>
        <div class="message">
            <button class="close" aria-label="Close" data-dismiss="alert" type="button">
                <span class="s7-close" aria-hidden="true"></span>
            </button>&nbsp;&nbsp;@T("Password change was unsuccessful. Please correct the errors and try again.")
            <p>@Html.ValidationSummary()</p>
        </div>
    </div>
}
<header>
    <h2 id="page-title">@Html.TitleForPage(T("Change Password").ToString()) </h2>
</header>
<div class="panel panel-default">
    @using (Html.BeginFormAntiForgeryPost())
            {
        <div class="container-fluid">
            <div class="panel-heading">
                <h2>@T("Account Information")</h2>
                var images = (IEnumerable<MediaPart>
                    ) Model.Images;<small>@T("Use the form below to change your password.")</small></p>
                    <p><small>@T("New passwords are required to be a minimum of {0} characters in length.", ViewData["PasswordLength"])</small></p>
</div>
            <div class="login-form group panel-body">
                <div class="form-group">
                    <label for="newPassword">@T("New password:")</label>
                    <div class="input-group">
                        <span class="input-group-addon"><span class="icon s7-door-lock"></span></span>
                        @Html.Password("newPassword", null, new { @class = "form-control text medium validate[required,minSize[" + ViewData["PasswordLength"] + "]]", placeholder = "New Password" })
                    </div>
                    @Html.ValidationMessage("newPassword")
                </div>
                <div class="form-group">
                    <label for="confirmPassword">@T("Confirm new password:")</label>
                    <div class="input-group">
                        <span class="input-group-addon"><span class="icon s7-door-lock"></span></span>
                        @Html.Password("confirmPassword", null, new { @class = "form-control text medium validate[required,minSize[" + ViewData["PasswordLength"] + "],equals[newPassword]]", placeholder = "Confirm New Password" })
                    </div>
                    @Html.ValidationMessage("confirmPassword")
                </div>
                <div class="form-group">
                    <button class="btn btn-primary" type="submit">@T("Change Password")</button>
                </div>
            </div>
        </div>
    }
</div>
