@using Orchard.ContentManagement
@using Orchard.Comments
@using Orchard.Comments.Models
@{
    CommentPart comment = Model.ContentPart;
    CommentsPart comments = comment.CommentedOnContentItem.As<CommentsPart>();
    var isAuthorized = AuthorizedFor(Permissions.AddComment, Model.ContentItem);

    var children = New.List(Items: Model.Items);
    children.Classes.Add("comments");

    if (Model.Items.Count > 0)
    {
        Model.Classes.Add("has-replies");
    }

    Model.Classes.Add("comment");

    Model.Id = "comment-" + comment.Id;
    var tag = Tag(Model, "article");
}
@tag.StartElement
<blockquote class="comment comment-@comment.Id">
    <div class="container-fluid">
        <div class="row">
            <span class="col-md-1 col-lg-1">
                @Display.CommentGravatar(ContentPart: comment)
            </span>
            <span class="col-md-8 col-lg-8">
                @Display.CommentText(ContentPart: Model.ContentPart, ContentItem: Model.ContentItem)
            </span>
        </div>
        <div>
            <span class="who">@Display.CommentAuthor(ContentPart: comment)</span>
            <span class="when">@Display.CommentMetadata(ContentPart: comment)</span>
            @if (comments.ThreadedComments && comments.CommentsActive && isAuthorized)
            {
                <span class="reply"> @Display.CommentReplyButton(ContentPart: comment)</span>
            }
        </div>
        @Display(children)
     </div>
</blockquote>

@tag.EndElement
