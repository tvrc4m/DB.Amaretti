/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/
/*!
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under the MIT license
 */
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); +function (a) { "use strict"; var b = a.fn.jquery.split(" ")[0].split("."); if (b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1 || b[0] > 2) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3") }(jQuery), +function (a) { "use strict"; function b() { var a = document.createElement("bootstrap"), b = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend" }; for (var c in b) if (void 0 !== a.style[c]) return { end: b[c] }; return !1 } a.fn.emulateTransitionEnd = function (b) { var c = !1, d = this; a(this).one("bsTransitionEnd", function () { c = !0 }); var e = function () { c || a(d).trigger(a.support.transition.end) }; return setTimeout(e, b), this }, a(function () { a.support.transition = b(), a.support.transition && (a.event.special.bsTransitionEnd = { bindType: a.support.transition.end, delegateType: a.support.transition.end, handle: function (b) { return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0 } }) }) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var c = a(this), e = c.data("bs.alert"); e || c.data("bs.alert", e = new d(this)), "string" == typeof b && e[b].call(c) }) } var c = '[data-dismiss="alert"]', d = function (b) { a(b).on("click", c, this.close) }; d.VERSION = "3.3.6", d.TRANSITION_DURATION = 150, d.prototype.close = function (b) { function c() { g.detach().trigger("closed.bs.alert").remove() } var e = a(this), f = e.attr("data-target"); f || (f = e.attr("href"), f = f && f.replace(/.*(?=#[^\s]*$)/, "")); var g = a(f); b && b.preventDefault(), g.length || (g = e.closest(".alert")), g.trigger(b = a.Event("close.bs.alert")), b.isDefaultPrevented() || (g.removeClass("in"), a.support.transition && g.hasClass("fade") ? g.one("bsTransitionEnd", c).emulateTransitionEnd(d.TRANSITION_DURATION) : c()) }; var e = a.fn.alert; a.fn.alert = b, a.fn.alert.Constructor = d, a.fn.alert.noConflict = function () { return a.fn.alert = e, this }, a(document).on("click.bs.alert.data-api", c, d.prototype.close) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.button"), f = "object" == typeof b && b; e || d.data("bs.button", e = new c(this, f)), "toggle" == b ? e.toggle() : b && e.setState(b) }) } var c = function (b, d) { this.$element = a(b), this.options = a.extend({}, c.DEFAULTS, d), this.isLoading = !1 }; c.VERSION = "3.3.6", c.DEFAULTS = { loadingText: "loading..." }, c.prototype.setState = function (b) { var c = "disabled", d = this.$element, e = d.is("input") ? "val" : "html", f = d.data(); b += "Text", null == f.resetText && d.data("resetText", d[e]()), setTimeout(a.proxy(function () { d[e](null == f[b] ? this.options[b] : f[b]), "loadingText" == b ? (this.isLoading = !0, d.addClass(c).attr(c, c)) : this.isLoading && (this.isLoading = !1, d.removeClass(c).removeAttr(c)) }, this), 0) }, c.prototype.toggle = function () { var a = !0, b = this.$element.closest('[data-toggle="buttons"]'); if (b.length) { var c = this.$element.find("input"); "radio" == c.prop("type") ? (c.prop("checked") && (a = !1), b.find(".active").removeClass("active"), this.$element.addClass("active")) : "checkbox" == c.prop("type") && (c.prop("checked") !== this.$element.hasClass("active") && (a = !1), this.$element.toggleClass("active")), c.prop("checked", this.$element.hasClass("active")), a && c.trigger("change") } else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active") }; var d = a.fn.button; a.fn.button = b, a.fn.button.Constructor = c, a.fn.button.noConflict = function () { return a.fn.button = d, this }, a(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function (c) { var d = a(c.target); d.hasClass("btn") || (d = d.closest(".btn")), b.call(d, "toggle"), a(c.target).is('input[type="radio"]') || a(c.target).is('input[type="checkbox"]') || c.preventDefault() }).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function (b) { a(b.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(b.type)) }) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.carousel"), f = a.extend({}, c.DEFAULTS, d.data(), "object" == typeof b && b), g = "string" == typeof b ? b : f.slide; e || d.data("bs.carousel", e = new c(this, f)), "number" == typeof b ? e.to(b) : g ? e[g]() : f.interval && e.pause().cycle() }) } var c = function (b, c) { this.$element = a(b), this.$indicators = this.$element.find(".carousel-indicators"), this.options = c, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on("keydown.bs.carousel", a.proxy(this.keydown, this)), "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", a.proxy(this.pause, this)).on("mouseleave.bs.carousel", a.proxy(this.cycle, this)) }; c.VERSION = "3.3.6", c.TRANSITION_DURATION = 600, c.DEFAULTS = { interval: 5e3, pause: "hover", wrap: !0, keyboard: !0 }, c.prototype.keydown = function (a) { if (!/input|textarea/i.test(a.target.tagName)) { switch (a.which) { case 37: this.prev(); break; case 39: this.next(); break; default: return } a.preventDefault() } }, c.prototype.cycle = function (b) { return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), this }, c.prototype.getItemIndex = function (a) { return this.$items = a.parent().children(".item"), this.$items.index(a || this.$active) }, c.prototype.getItemForDirection = function (a, b) { var c = this.getItemIndex(b), d = "prev" == a && 0 === c || "next" == a && c == this.$items.length - 1; if (d && !this.options.wrap) return b; var e = "prev" == a ? -1 : 1, f = (c + e) % this.$items.length; return this.$items.eq(f) }, c.prototype.to = function (a) { var b = this, c = this.getItemIndex(this.$active = this.$element.find(".item.active")); return a > this.$items.length - 1 || 0 > a ? void 0 : this.sliding ? this.$element.one("slid.bs.carousel", function () { b.to(a) }) : c == a ? this.pause().cycle() : this.slide(a > c ? "next" : "prev", this.$items.eq(a)) }, c.prototype.pause = function (b) { return b || (this.paused = !0), this.$element.find(".next, .prev").length && a.support.transition && (this.$element.trigger(a.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this }, c.prototype.next = function () { return this.sliding ? void 0 : this.slide("next") }, c.prototype.prev = function () { return this.sliding ? void 0 : this.slide("prev") }, c.prototype.slide = function (b, d) { var e = this.$element.find(".item.active"), f = d || this.getItemForDirection(b, e), g = this.interval, h = "next" == b ? "left" : "right", i = this; if (f.hasClass("active")) return this.sliding = !1; var j = f[0], k = a.Event("slide.bs.carousel", { relatedTarget: j, direction: h }); if (this.$element.trigger(k), !k.isDefaultPrevented()) { if (this.sliding = !0, g && this.pause(), this.$indicators.length) { this.$indicators.find(".active").removeClass("active"); var l = a(this.$indicators.children()[this.getItemIndex(f)]); l && l.addClass("active") } var m = a.Event("slid.bs.carousel", { relatedTarget: j, direction: h }); return a.support.transition && this.$element.hasClass("slide") ? (f.addClass(b), f[0].offsetWidth, e.addClass(h), f.addClass(h), e.one("bsTransitionEnd", function () { f.removeClass([b, h].join(" ")).addClass("active"), e.removeClass(["active", h].join(" ")), i.sliding = !1, setTimeout(function () { i.$element.trigger(m) }, 0) }).emulateTransitionEnd(c.TRANSITION_DURATION)) : (e.removeClass("active"), f.addClass("active"), this.sliding = !1, this.$element.trigger(m)), g && this.cycle(), this } }; var d = a.fn.carousel; a.fn.carousel = b, a.fn.carousel.Constructor = c, a.fn.carousel.noConflict = function () { return a.fn.carousel = d, this }; var e = function (c) { var d, e = a(this), f = a(e.attr("data-target") || (d = e.attr("href")) && d.replace(/.*(?=#[^\s]+$)/, "")); if (f.hasClass("carousel")) { var g = a.extend({}, f.data(), e.data()), h = e.attr("data-slide-to"); h && (g.interval = !1), b.call(f, g), h && f.data("bs.carousel").to(h), c.preventDefault() } }; a(document).on("click.bs.carousel.data-api", "[data-slide]", e).on("click.bs.carousel.data-api", "[data-slide-to]", e), a(window).on("load", function () { a('[data-ride="carousel"]').each(function () { var c = a(this); b.call(c, c.data()) }) }) }(jQuery), +function (a) { "use strict"; function b(b) { var c, d = b.attr("data-target") || (c = b.attr("href")) && c.replace(/.*(?=#[^\s]+$)/, ""); return a(d) } function c(b) { return this.each(function () { var c = a(this), e = c.data("bs.collapse"), f = a.extend({}, d.DEFAULTS, c.data(), "object" == typeof b && b); !e && f.toggle && /show|hide/.test(b) && (f.toggle = !1), e || c.data("bs.collapse", e = new d(this, f)), "string" == typeof b && e[b]() }) } var d = function (b, c) { this.$element = a(b), this.options = a.extend({}, d.DEFAULTS, c), this.$trigger = a('[data-toggle="collapse"][href="#' + b.id + '"],[data-toggle="collapse"][data-target="#' + b.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle() }; d.VERSION = "3.3.6", d.TRANSITION_DURATION = 350, d.DEFAULTS = { toggle: !0 }, d.prototype.dimension = function () { var a = this.$element.hasClass("width"); return a ? "width" : "height" }, d.prototype.show = function () { if (!this.transitioning && !this.$element.hasClass("in")) { var b, e = this.$parent && this.$parent.children(".panel").children(".in, .collapsing"); if (!(e && e.length && (b = e.data("bs.collapse"), b && b.transitioning))) { var f = a.Event("show.bs.collapse"); if (this.$element.trigger(f), !f.isDefaultPrevented()) { e && e.length && (c.call(e, "hide"), b || e.data("bs.collapse", null)); var g = this.dimension(); this.$element.removeClass("collapse").addClass("collapsing")[g](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), this.transitioning = 1; var h = function () { this.$element.removeClass("collapsing").addClass("collapse in")[g](""), this.transitioning = 0, this.$element.trigger("shown.bs.collapse") }; if (!a.support.transition) return h.call(this); var i = a.camelCase(["scroll", g].join("-")); this.$element.one("bsTransitionEnd", a.proxy(h, this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i]) } } } }, d.prototype.hide = function () { if (!this.transitioning && this.$element.hasClass("in")) { var b = a.Event("hide.bs.collapse"); if (this.$element.trigger(b), !b.isDefaultPrevented()) { var c = this.dimension(); this.$element[c](this.$element[c]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1), this.$trigger.addClass("collapsed").attr("aria-expanded", !1), this.transitioning = 1; var e = function () { this.transitioning = 0, this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse") }; return a.support.transition ? void this.$element[c](0).one("bsTransitionEnd", a.proxy(e, this)).emulateTransitionEnd(d.TRANSITION_DURATION) : e.call(this) } } }, d.prototype.toggle = function () { this[this.$element.hasClass("in") ? "hide" : "show"]() }, d.prototype.getParent = function () { return a(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(a.proxy(function (c, d) { var e = a(d); this.addAriaAndCollapsedClass(b(e), e) }, this)).end() }, d.prototype.addAriaAndCollapsedClass = function (a, b) { var c = a.hasClass("in"); a.attr("aria-expanded", c), b.toggleClass("collapsed", !c).attr("aria-expanded", c) }; var e = a.fn.collapse; a.fn.collapse = c, a.fn.collapse.Constructor = d, a.fn.collapse.noConflict = function () { return a.fn.collapse = e, this }, a(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function (d) { var e = a(this); e.attr("data-target") || d.preventDefault(); var f = b(e), g = f.data("bs.collapse"), h = g ? "toggle" : e.data(); c.call(f, h) }) }(jQuery), +function (a) { "use strict"; function b(b) { var c = b.attr("data-target"); c || (c = b.attr("href"), c = c && /#[A-Za-z]/.test(c) && c.replace(/.*(?=#[^\s]*$)/, "")); var d = c && a(c); return d && d.length ? d : b.parent() } function c(c) { c && 3 === c.which || (a(e).remove(), a(f).each(function () { var d = a(this), e = b(d), f = { relatedTarget: this }; e.hasClass("open") && (c && "click" == c.type && /input|textarea/i.test(c.target.tagName) && a.contains(e[0], c.target) || (e.trigger(c = a.Event("hide.bs.dropdown", f)), c.isDefaultPrevented() || (d.attr("aria-expanded", "false"), e.removeClass("open").trigger(a.Event("hidden.bs.dropdown", f))))) })) } function d(b) { return this.each(function () { var c = a(this), d = c.data("bs.dropdown"); d || c.data("bs.dropdown", d = new g(this)), "string" == typeof b && d[b].call(c) }) } var e = ".dropdown-backdrop", f = '[data-toggle="dropdown"]', g = function (b) { a(b).on("click.bs.dropdown", this.toggle) }; g.VERSION = "3.3.6", g.prototype.toggle = function (d) { var e = a(this); if (!e.is(".disabled, :disabled")) { var f = b(e), g = f.hasClass("open"); if (c(), !g) { "ontouchstart" in document.documentElement && !f.closest(".navbar-nav").length && a(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(a(this)).on("click", c); var h = { relatedTarget: this }; if (f.trigger(d = a.Event("show.bs.dropdown", h)), d.isDefaultPrevented()) return; e.trigger("focus").attr("aria-expanded", "true"), f.toggleClass("open").trigger(a.Event("shown.bs.dropdown", h)) } return !1 } }, g.prototype.keydown = function (c) { if (/(38|40|27|32)/.test(c.which) && !/input|textarea/i.test(c.target.tagName)) { var d = a(this); if (c.preventDefault(), c.stopPropagation(), !d.is(".disabled, :disabled")) { var e = b(d), g = e.hasClass("open"); if (!g && 27 != c.which || g && 27 == c.which) return 27 == c.which && e.find(f).trigger("focus"), d.trigger("click"); var h = " li:not(.disabled):visible a", i = e.find(".dropdown-menu" + h); if (i.length) { var j = i.index(c.target); 38 == c.which && j > 0 && j--, 40 == c.which && j < i.length - 1 && j++, ~j || (j = 0), i.eq(j).trigger("focus") } } } }; var h = a.fn.dropdown; a.fn.dropdown = d, a.fn.dropdown.Constructor = g, a.fn.dropdown.noConflict = function () { return a.fn.dropdown = h, this }, a(document).on("click.bs.dropdown.data-api", c).on("click.bs.dropdown.data-api", ".dropdown form", function (a) { a.stopPropagation() }).on("click.bs.dropdown.data-api", f, g.prototype.toggle).on("keydown.bs.dropdown.data-api", f, g.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", g.prototype.keydown) }(jQuery), +function (a) { "use strict"; function b(b, d) { return this.each(function () { var e = a(this), f = e.data("bs.modal"), g = a.extend({}, c.DEFAULTS, e.data(), "object" == typeof b && b); f || e.data("bs.modal", f = new c(this, g)), "string" == typeof b ? f[b](d) : g.show && f.show(d) }) } var c = function (b, c) { this.options = c, this.$body = a(document.body), this.$element = a(b), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find(".modal-content").load(this.options.remote, a.proxy(function () { this.$element.trigger("loaded.bs.modal") }, this)) }; c.VERSION = "3.3.6", c.TRANSITION_DURATION = 300, c.BACKDROP_TRANSITION_DURATION = 150, c.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }, c.prototype.toggle = function (a) { return this.isShown ? this.hide() : this.show(a) }, c.prototype.show = function (b) { var d = this, e = a.Event("show.bs.modal", { relatedTarget: b }); this.$element.trigger(e), this.isShown || e.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', a.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function () { d.$element.one("mouseup.dismiss.bs.modal", function (b) { a(b.target).is(d.$element) && (d.ignoreBackdropClick = !0) }) }), this.backdrop(function () { var e = a.support.transition && d.$element.hasClass("fade"); d.$element.parent().length || d.$element.appendTo(d.$body), d.$element.show().scrollTop(0), d.adjustDialog(), e && d.$element[0].offsetWidth, d.$element.addClass("in"), d.enforceFocus(); var f = a.Event("shown.bs.modal", { relatedTarget: b }); e ? d.$dialog.one("bsTransitionEnd", function () { d.$element.trigger("focus").trigger(f) }).emulateTransitionEnd(c.TRANSITION_DURATION) : d.$element.trigger("focus").trigger(f) })) }, c.prototype.hide = function (b) { b && b.preventDefault(), b = a.Event("hide.bs.modal"), this.$element.trigger(b), this.isShown && !b.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), a(document).off("focusin.bs.modal"), this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), a.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", a.proxy(this.hideModal, this)).emulateTransitionEnd(c.TRANSITION_DURATION) : this.hideModal()) }, c.prototype.enforceFocus = function () { a(document).off("focusin.bs.modal").on("focusin.bs.modal", a.proxy(function (a) { this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.trigger("focus") }, this)) }, c.prototype.escape = function () { this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", a.proxy(function (a) { 27 == a.which && this.hide() }, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal") }, c.prototype.resize = function () { this.isShown ? a(window).on("resize.bs.modal", a.proxy(this.handleUpdate, this)) : a(window).off("resize.bs.modal") }, c.prototype.hideModal = function () { var a = this; this.$element.hide(), this.backdrop(function () { a.$body.removeClass("modal-open"), a.resetAdjustments(), a.resetScrollbar(), a.$element.trigger("hidden.bs.modal") }) }, c.prototype.removeBackdrop = function () { this.$backdrop && this.$backdrop.remove(), this.$backdrop = null }, c.prototype.backdrop = function (b) { var d = this, e = this.$element.hasClass("fade") ? "fade" : ""; if (this.isShown && this.options.backdrop) { var f = a.support.transition && e; if (this.$backdrop = a(document.createElement("div")).addClass("modal-backdrop " + e).appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", a.proxy(function (a) { return this.ignoreBackdropClick ? void (this.ignoreBackdropClick = !1) : void (a.target === a.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide())) }, this)), f && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !b) return; f ? this.$backdrop.one("bsTransitionEnd", b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : b() } else if (!this.isShown && this.$backdrop) { this.$backdrop.removeClass("in"); var g = function () { d.removeBackdrop(), b && b() }; a.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : g() } else b && b() }, c.prototype.handleUpdate = function () { this.adjustDialog() }, c.prototype.adjustDialog = function () { var a = this.$element[0].scrollHeight > document.documentElement.clientHeight; this.$element.css({ paddingLeft: !this.bodyIsOverflowing && a ? this.scrollbarWidth : "", paddingRight: this.bodyIsOverflowing && !a ? this.scrollbarWidth : "" }) }, c.prototype.resetAdjustments = function () { this.$element.css({ paddingLeft: "", paddingRight: "" }) }, c.prototype.checkScrollbar = function () { var a = window.innerWidth; if (!a) { var b = document.documentElement.getBoundingClientRect(); a = b.right - Math.abs(b.left) } this.bodyIsOverflowing = document.body.clientWidth < a, this.scrollbarWidth = this.measureScrollbar() }, c.prototype.setScrollbar = function () { var a = parseInt(this.$body.css("padding-right") || 0, 10); this.originalBodyPad = document.body.style.paddingRight || "", this.bodyIsOverflowing && this.$body.css("padding-right", a + this.scrollbarWidth) }, c.prototype.resetScrollbar = function () { this.$body.css("padding-right", this.originalBodyPad) }, c.prototype.measureScrollbar = function () { var a = document.createElement("div"); a.className = "modal-scrollbar-measure", this.$body.append(a); var b = a.offsetWidth - a.clientWidth; return this.$body[0].removeChild(a), b }; var d = a.fn.modal; a.fn.modal = b, a.fn.modal.Constructor = c, a.fn.modal.noConflict = function () { return a.fn.modal = d, this }, a(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (c) { var d = a(this), e = d.attr("href"), f = a(d.attr("data-target") || e && e.replace(/.*(?=#[^\s]+$)/, "")), g = f.data("bs.modal") ? "toggle" : a.extend({ remote: !/#/.test(e) && e }, f.data(), d.data()); d.is("a") && c.preventDefault(), f.one("show.bs.modal", function (a) { a.isDefaultPrevented() || f.one("hidden.bs.modal", function () { d.is(":visible") && d.trigger("focus") }) }), b.call(f, g, this) }) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.tooltip"), f = "object" == typeof b && b; (e || !/destroy|hide/.test(b)) && (e || d.data("bs.tooltip", e = new c(this, f)), "string" == typeof b && e[b]()) }) } var c = function (a, b) { this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", a, b) }; c.VERSION = "3.3.6", c.TRANSITION_DURATION = 150, c.DEFAULTS = { animation: !0, placement: "top", selector: !1, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: !1, container: !1, viewport: { selector: "body", padding: 0 } }, c.prototype.init = function (b, c, d) { if (this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d), this.$viewport = this.options.viewport && a(a.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = { click: !1, hover: !1, focus: !1 }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!"); for (var e = this.options.trigger.split(" "), f = e.length; f--;) { var g = e[f]; if ("click" == g) this.$element.on("click." + this.type, this.options.selector, a.proxy(this.toggle, this)); else if ("manual" != g) { var h = "hover" == g ? "mouseenter" : "focusin", i = "hover" == g ? "mouseleave" : "focusout"; this.$element.on(h + "." + this.type, this.options.selector, a.proxy(this.enter, this)), this.$element.on(i + "." + this.type, this.options.selector, a.proxy(this.leave, this)) } } this.options.selector ? this._options = a.extend({}, this.options, { trigger: "manual", selector: "" }) : this.fixTitle() }, c.prototype.getDefaults = function () { return c.DEFAULTS }, c.prototype.getOptions = function (b) { return b = a.extend({}, this.getDefaults(), this.$element.data(), b), b.delay && "number" == typeof b.delay && (b.delay = { show: b.delay, hide: b.delay }), b }, c.prototype.getDelegateOptions = function () { var b = {}, c = this.getDefaults(); return this._options && a.each(this._options, function (a, d) { c[a] != d && (b[a] = d) }), b }, c.prototype.enter = function (b) { var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type); return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c)), b instanceof a.Event && (c.inState["focusin" == b.type ? "focus" : "hover"] = !0), c.tip().hasClass("in") || "in" == c.hoverState ? void (c.hoverState = "in") : (clearTimeout(c.timeout), c.hoverState = "in", c.options.delay && c.options.delay.show ? void (c.timeout = setTimeout(function () { "in" == c.hoverState && c.show() }, c.options.delay.show)) : c.show()) }, c.prototype.isInStateTrue = function () { for (var a in this.inState) if (this.inState[a]) return !0; return !1 }, c.prototype.leave = function (b) { var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type); return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c)), b instanceof a.Event && (c.inState["focusout" == b.type ? "focus" : "hover"] = !1), c.isInStateTrue() ? void 0 : (clearTimeout(c.timeout), c.hoverState = "out", c.options.delay && c.options.delay.hide ? void (c.timeout = setTimeout(function () { "out" == c.hoverState && c.hide() }, c.options.delay.hide)) : c.hide()) }, c.prototype.show = function () { var b = a.Event("show.bs." + this.type); if (this.hasContent() && this.enabled) { this.$element.trigger(b); var d = a.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]); if (b.isDefaultPrevented() || !d) return; var e = this, f = this.tip(), g = this.getUID(this.type); this.setContent(), f.attr("id", g), this.$element.attr("aria-describedby", g), this.options.animation && f.addClass("fade"); var h = "function" == typeof this.options.placement ? this.options.placement.call(this, f[0], this.$element[0]) : this.options.placement, i = /\s?auto?\s?/i, j = i.test(h); j && (h = h.replace(i, "") || "top"), f.detach().css({ top: 0, left: 0, display: "block" }).addClass(h).data("bs." + this.type, this), this.options.container ? f.appendTo(this.options.container) : f.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type); var k = this.getPosition(), l = f[0].offsetWidth, m = f[0].offsetHeight; if (j) { var n = h, o = this.getPosition(this.$viewport); h = "bottom" == h && k.bottom + m > o.bottom ? "top" : "top" == h && k.top - m < o.top ? "bottom" : "right" == h && k.right + l > o.width ? "left" : "left" == h && k.left - l < o.left ? "right" : h, f.removeClass(n).addClass(h) } var p = this.getCalculatedOffset(h, k, l, m); this.applyPlacement(p, h); var q = function () { var a = e.hoverState; e.$element.trigger("shown.bs." + e.type), e.hoverState = null, "out" == a && e.leave(e) }; a.support.transition && this.$tip.hasClass("fade") ? f.one("bsTransitionEnd", q).emulateTransitionEnd(c.TRANSITION_DURATION) : q() } }, c.prototype.applyPlacement = function (b, c) { var d = this.tip(), e = d[0].offsetWidth, f = d[0].offsetHeight, g = parseInt(d.css("margin-top"), 10), h = parseInt(d.css("margin-left"), 10); isNaN(g) && (g = 0), isNaN(h) && (h = 0), b.top += g, b.left += h, a.offset.setOffset(d[0], a.extend({ using: function (a) { d.css({ top: Math.round(a.top), left: Math.round(a.left) }) } }, b), 0), d.addClass("in"); var i = d[0].offsetWidth, j = d[0].offsetHeight; "top" == c && j != f && (b.top = b.top + f - j); var k = this.getViewportAdjustedDelta(c, b, i, j); k.left ? b.left += k.left : b.top += k.top; var l = /top|bottom/.test(c), m = l ? 2 * k.left - e + i : 2 * k.top - f + j, n = l ? "offsetWidth" : "offsetHeight"; d.offset(b), this.replaceArrow(m, d[0][n], l) }, c.prototype.replaceArrow = function (a, b, c) { this.arrow().css(c ? "left" : "top", 50 * (1 - a / b) + "%").css(c ? "top" : "left", "") }, c.prototype.setContent = function () { var a = this.tip(), b = this.getTitle(); a.find(".tooltip-inner")[this.options.html ? "html" : "text"](b), a.removeClass("fade in top bottom left right") }, c.prototype.hide = function (b) { function d() { "in" != e.hoverState && f.detach(), e.$element.removeAttr("aria-describedby").trigger("hidden.bs." + e.type), b && b() } var e = this, f = a(this.$tip), g = a.Event("hide.bs." + this.type); return this.$element.trigger(g), g.isDefaultPrevented() ? void 0 : (f.removeClass("in"), a.support.transition && f.hasClass("fade") ? f.one("bsTransitionEnd", d).emulateTransitionEnd(c.TRANSITION_DURATION) : d(), this.hoverState = null, this) }, c.prototype.fixTitle = function () { var a = this.$element; (a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "") }, c.prototype.hasContent = function () { return this.getTitle() }, c.prototype.getPosition = function (b) { b = b || this.$element; var c = b[0], d = "BODY" == c.tagName, e = c.getBoundingClientRect(); null == e.width && (e = a.extend({}, e, { width: e.right - e.left, height: e.bottom - e.top })); var f = d ? { top: 0, left: 0 } : b.offset(), g = { scroll: d ? document.documentElement.scrollTop || document.body.scrollTop : b.scrollTop() }, h = d ? { width: a(window).width(), height: a(window).height() } : null; return a.extend({}, e, g, h, f) }, c.prototype.getCalculatedOffset = function (a, b, c, d) { return "bottom" == a ? { top: b.top + b.height, left: b.left + b.width / 2 - c / 2 } : "top" == a ? { top: b.top - d, left: b.left + b.width / 2 - c / 2 } : "left" == a ? { top: b.top + b.height / 2 - d / 2, left: b.left - c } : { top: b.top + b.height / 2 - d / 2, left: b.left + b.width } }, c.prototype.getViewportAdjustedDelta = function (a, b, c, d) { var e = { top: 0, left: 0 }; if (!this.$viewport) return e; var f = this.options.viewport && this.options.viewport.padding || 0, g = this.getPosition(this.$viewport); if (/right|left/.test(a)) { var h = b.top - f - g.scroll, i = b.top + f - g.scroll + d; h < g.top ? e.top = g.top - h : i > g.top + g.height && (e.top = g.top + g.height - i) } else { var j = b.left - f, k = b.left + f + c; j < g.left ? e.left = g.left - j : k > g.right && (e.left = g.left + g.width - k) } return e }, c.prototype.getTitle = function () { var a, b = this.$element, c = this.options; return a = b.attr("data-original-title") || ("function" == typeof c.title ? c.title.call(b[0]) : c.title) }, c.prototype.getUID = function (a) { do a += ~~(1e6 * Math.random()); while (document.getElementById(a)); return a }, c.prototype.tip = function () { if (!this.$tip && (this.$tip = a(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!"); return this.$tip }, c.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow") }, c.prototype.enable = function () { this.enabled = !0 }, c.prototype.disable = function () { this.enabled = !1 }, c.prototype.toggleEnabled = function () { this.enabled = !this.enabled }, c.prototype.toggle = function (b) { var c = this; b && (c = a(b.currentTarget).data("bs." + this.type), c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c))), b ? (c.inState.click = !c.inState.click, c.isInStateTrue() ? c.enter(c) : c.leave(c)) : c.tip().hasClass("in") ? c.leave(c) : c.enter(c) }, c.prototype.destroy = function () { var a = this; clearTimeout(this.timeout), this.hide(function () { a.$element.off("." + a.type).removeData("bs." + a.type), a.$tip && a.$tip.detach(), a.$tip = null, a.$arrow = null, a.$viewport = null }) }; var d = a.fn.tooltip; a.fn.tooltip = b, a.fn.tooltip.Constructor = c, a.fn.tooltip.noConflict = function () { return a.fn.tooltip = d, this } }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.popover"), f = "object" == typeof b && b; (e || !/destroy|hide/.test(b)) && (e || d.data("bs.popover", e = new c(this, f)), "string" == typeof b && e[b]()) }) } var c = function (a, b) { this.init("popover", a, b) }; if (!a.fn.tooltip) throw new Error("Popover requires tooltip.js"); c.VERSION = "3.3.6", c.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, { placement: "right", trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>' }), c.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype), c.prototype.constructor = c, c.prototype.getDefaults = function () { return c.DEFAULTS }, c.prototype.setContent = function () { var a = this.tip(), b = this.getTitle(), c = this.getContent(); a.find(".popover-title")[this.options.html ? "html" : "text"](b), a.find(".popover-content").children().detach().end()[this.options.html ? "string" == typeof c ? "html" : "append" : "text"](c), a.removeClass("fade top bottom left right in"), a.find(".popover-title").html() || a.find(".popover-title").hide() }, c.prototype.hasContent = function () { return this.getTitle() || this.getContent() }, c.prototype.getContent = function () { var a = this.$element, b = this.options; return a.attr("data-content") || ("function" == typeof b.content ? b.content.call(a[0]) : b.content) }, c.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".arrow") }; var d = a.fn.popover; a.fn.popover = b, a.fn.popover.Constructor = c, a.fn.popover.noConflict = function () { return a.fn.popover = d, this } }(jQuery), +function (a) {
    "use strict"; function b(c, d) { this.$body = a(document.body), this.$scrollElement = a(a(c).is(document.body) ? window : c), this.options = a.extend({}, b.DEFAULTS, d), this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", a.proxy(this.process, this)), this.refresh(), this.process() } function c(c) { return this.each(function () { var d = a(this), e = d.data("bs.scrollspy"), f = "object" == typeof c && c; e || d.data("bs.scrollspy", e = new b(this, f)), "string" == typeof c && e[c]() }) } b.VERSION = "3.3.6", b.DEFAULTS = { offset: 10 }, b.prototype.getScrollHeight = function () { return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight) }, b.prototype.refresh = function () { var b = this, c = "offset", d = 0; this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), a.isWindow(this.$scrollElement[0]) || (c = "position", d = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function () { var b = a(this), e = b.data("target") || b.attr("href"), f = /^#./.test(e) && a(e); return f && f.length && f.is(":visible") && [[f[c]().top + d, e]] || null }).sort(function (a, b) { return a[0] - b[0] }).each(function () { b.offsets.push(this[0]), b.targets.push(this[1]) }) }, b.prototype.process = function () { var a, b = this.$scrollElement.scrollTop() + this.options.offset, c = this.getScrollHeight(), d = this.options.offset + c - this.$scrollElement.height(), e = this.offsets, f = this.targets, g = this.activeTarget; if (this.scrollHeight != c && this.refresh(), b >= d) return g != (a = f[f.length - 1]) && this.activate(a); if (g && b < e[0]) return this.activeTarget = null, this.clear(); for (a = e.length; a--;) g != f[a] && b >= e[a] && (void 0 === e[a + 1] || b < e[a + 1]) && this.activate(f[a]) }, b.prototype.activate = function (b) {
        this.activeTarget = b, this.clear(); var c = this.selector + '[data-target="' + b + '"],' + this.selector + '[href="' + b + '"]', d = a(c).parents("li").addClass("active");
        d.parent(".dropdown-menu").length && (d = d.closest("li.dropdown").addClass("active")), d.trigger("activate.bs.scrollspy")
    }, b.prototype.clear = function () { a(this.selector).parentsUntil(this.options.target, ".active").removeClass("active") }; var d = a.fn.scrollspy; a.fn.scrollspy = c, a.fn.scrollspy.Constructor = b, a.fn.scrollspy.noConflict = function () { return a.fn.scrollspy = d, this }, a(window).on("load.bs.scrollspy.data-api", function () { a('[data-spy="scroll"]').each(function () { var b = a(this); c.call(b, b.data()) }) })
}(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.tab"); e || d.data("bs.tab", e = new c(this)), "string" == typeof b && e[b]() }) } var c = function (b) { this.element = a(b) }; c.VERSION = "3.3.6", c.TRANSITION_DURATION = 150, c.prototype.show = function () { var b = this.element, c = b.closest("ul:not(.dropdown-menu)"), d = b.data("target"); if (d || (d = b.attr("href"), d = d && d.replace(/.*(?=#[^\s]*$)/, "")), !b.parent("li").hasClass("active")) { var e = c.find(".active:last a"), f = a.Event("hide.bs.tab", { relatedTarget: b[0] }), g = a.Event("show.bs.tab", { relatedTarget: e[0] }); if (e.trigger(f), b.trigger(g), !g.isDefaultPrevented() && !f.isDefaultPrevented()) { var h = a(d); this.activate(b.closest("li"), c), this.activate(h, h.parent(), function () { e.trigger({ type: "hidden.bs.tab", relatedTarget: b[0] }), b.trigger({ type: "shown.bs.tab", relatedTarget: e[0] }) }) } } }, c.prototype.activate = function (b, d, e) { function f() { g.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1), b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0), h ? (b[0].offsetWidth, b.addClass("in")) : b.removeClass("fade"), b.parent(".dropdown-menu").length && b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0), e && e() } var g = d.find("> .active"), h = e && a.support.transition && (g.length && g.hasClass("fade") || !!d.find("> .fade").length); g.length && h ? g.one("bsTransitionEnd", f).emulateTransitionEnd(c.TRANSITION_DURATION) : f(), g.removeClass("in") }; var d = a.fn.tab; a.fn.tab = b, a.fn.tab.Constructor = c, a.fn.tab.noConflict = function () { return a.fn.tab = d, this }; var e = function (c) { c.preventDefault(), b.call(a(this), "show") }; a(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', e).on("click.bs.tab.data-api", '[data-toggle="pill"]', e) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.affix"), f = "object" == typeof b && b; e || d.data("bs.affix", e = new c(this, f)), "string" == typeof b && e[b]() }) } var c = function (b, d) { this.options = a.extend({}, c.DEFAULTS, d), this.$target = a(this.options.target).on("scroll.bs.affix.data-api", a.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", a.proxy(this.checkPositionWithEventLoop, this)), this.$element = a(b), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition() }; c.VERSION = "3.3.6", c.RESET = "affix affix-top affix-bottom", c.DEFAULTS = { offset: 0, target: window }, c.prototype.getState = function (a, b, c, d) { var e = this.$target.scrollTop(), f = this.$element.offset(), g = this.$target.height(); if (null != c && "top" == this.affixed) return c > e ? "top" : !1; if ("bottom" == this.affixed) return null != c ? e + this.unpin <= f.top ? !1 : "bottom" : a - d >= e + g ? !1 : "bottom"; var h = null == this.affixed, i = h ? e : f.top, j = h ? g : b; return null != c && c >= e ? "top" : null != d && i + j >= a - d ? "bottom" : !1 }, c.prototype.getPinnedOffset = function () { if (this.pinnedOffset) return this.pinnedOffset; this.$element.removeClass(c.RESET).addClass("affix"); var a = this.$target.scrollTop(), b = this.$element.offset(); return this.pinnedOffset = b.top - a }, c.prototype.checkPositionWithEventLoop = function () { setTimeout(a.proxy(this.checkPosition, this), 1) }, c.prototype.checkPosition = function () { if (this.$element.is(":visible")) { var b = this.$element.height(), d = this.options.offset, e = d.top, f = d.bottom, g = Math.max(a(document).height(), a(document.body).height()); "object" != typeof d && (f = e = d), "function" == typeof e && (e = d.top(this.$element)), "function" == typeof f && (f = d.bottom(this.$element)); var h = this.getState(g, b, e, f); if (this.affixed != h) { null != this.unpin && this.$element.css("top", ""); var i = "affix" + (h ? "-" + h : ""), j = a.Event(i + ".bs.affix"); if (this.$element.trigger(j), j.isDefaultPrevented()) return; this.affixed = h, this.unpin = "bottom" == h ? this.getPinnedOffset() : null, this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace("affix", "affixed") + ".bs.affix") } "bottom" == h && this.$element.offset({ top: g - b - f }) } }; var d = a.fn.affix; a.fn.affix = b, a.fn.affix.Constructor = c, a.fn.affix.noConflict = function () { return a.fn.affix = d, this }, a(window).on("load", function () { a('[data-spy="affix"]').each(function () { var c = a(this), d = c.data(); d.offset = d.offset || {}, null != d.offsetBottom && (d.offset.bottom = d.offsetBottom), null != d.offsetTop && (d.offset.top = d.offsetTop), b.call(c, d) }) }) }(jQuery);
/*! nanoScrollerJS - v0.8.7 - 2015
* http://jamesflorentino.github.com/nanoScrollerJS/
* Copyright (c) 2015 James Florentino; Licensed MIT */
(function (factory) {
    if (typeof define === 'function' && define.amd) {
        return define(['jquery'], function ($) {
            return factory($, window, document);
        });
    } else if (typeof exports === 'object') {
        return module.exports = factory(require('jquery'), window, document);
    } else {
        return factory(jQuery, window, document);
    }
})(function ($, window, document) {
    "use strict";
    var BROWSER_IS_IE7, BROWSER_SCROLLBAR_WIDTH, DOMSCROLL, DOWN, DRAG, ENTER, KEYDOWN, KEYUP, MOUSEDOWN, MOUSEENTER, MOUSEMOVE, MOUSEUP, MOUSEWHEEL, NanoScroll, PANEDOWN, RESIZE, SCROLL, SCROLLBAR, TOUCHMOVE, UP, WHEEL, cAF, defaults, getBrowserScrollbarWidth, hasTransform, isFFWithBuggyScrollbar, rAF, transform, _elementStyle, _prefixStyle, _vendor;
    defaults = {

        /**
          a classname for the pane element.
          @property paneClass
          @type String
          @default 'nano-pane'
         */
        paneClass: 'nano-pane',

        /**
          a classname for the slider element.
          @property sliderClass
          @type String
          @default 'nano-slider'
         */
        sliderClass: 'nano-slider',

        /**
          a classname for the content element.
          @property contentClass
          @type String
          @default 'nano-content'
         */
        contentClass: 'nano-content',

        /**
          a setting to enable native scrolling in iOS devices.
          @property iOSNativeScrolling
          @type Boolean
          @default false
         */
        iOSNativeScrolling: false,

        /**
          a setting to prevent the rest of the page being
          scrolled when user scrolls the `.content` element.
          @property preventPageScrolling
          @type Boolean
          @default false
         */
        preventPageScrolling: false,

        /**
          a setting to disable binding to the resize event.
          @property disableResize
          @type Boolean
          @default false
         */
        disableResize: false,

        /**
          a setting to make the scrollbar always visible.
          @property alwaysVisible
          @type Boolean
          @default false
         */
        alwaysVisible: false,

        /**
          a default timeout for the `flash()` method.
          @property flashDelay
          @type Number
          @default 1500
         */
        flashDelay: 1500,

        /**
          a minimum height for the `.slider` element.
          @property sliderMinHeight
          @type Number
          @default 20
         */
        sliderMinHeight: 20,

        /**
          a maximum height for the `.slider` element.
          @property sliderMaxHeight
          @type Number
          @default null
         */
        sliderMaxHeight: null,

        /**
          an alternate document context.
          @property documentContext
          @type Document
          @default null
         */
        documentContext: null,

        /**
          an alternate window context.
          @property windowContext
          @type Window
          @default null
         */
        windowContext: null
    };

    /**
      @property SCROLLBAR
      @type String
      @static
      @final
      @private
     */
    SCROLLBAR = 'scrollbar';

    /**
      @property SCROLL
      @type String
      @static
      @final
      @private
     */
    SCROLL = 'scroll';

    /**
      @property MOUSEDOWN
      @type String
      @final
      @private
     */
    MOUSEDOWN = 'mousedown';

    /**
      @property MOUSEENTER
      @type String
      @final
      @private
     */
    MOUSEENTER = 'mouseenter';

    /**
      @property MOUSEMOVE
      @type String
      @static
      @final
      @private
     */
    MOUSEMOVE = 'mousemove';

    /**
      @property MOUSEWHEEL
      @type String
      @final
      @private
     */
    MOUSEWHEEL = 'mousewheel';

    /**
      @property MOUSEUP
      @type String
      @static
      @final
      @private
     */
    MOUSEUP = 'mouseup';

    /**
      @property RESIZE
      @type String
      @final
      @private
     */
    RESIZE = 'resize';

    /**
      @property DRAG
      @type String
      @static
      @final
      @private
     */
    DRAG = 'drag';

    /**
      @property ENTER
      @type String
      @static
      @final
      @private
     */
    ENTER = 'enter';

    /**
      @property UP
      @type String
      @static
      @final
      @private
     */
    UP = 'up';

    /**
      @property PANEDOWN
      @type String
      @static
      @final
      @private
     */
    PANEDOWN = 'panedown';

    /**
      @property DOMSCROLL
      @type String
      @static
      @final
      @private
     */
    DOMSCROLL = 'DOMMouseScroll';

    /**
      @property DOWN
      @type String
      @static
      @final
      @private
     */
    DOWN = 'down';

    /**
      @property WHEEL
      @type String
      @static
      @final
      @private
     */
    WHEEL = 'wheel';

    /**
      @property KEYDOWN
      @type String
      @static
      @final
      @private
     */
    KEYDOWN = 'keydown';

    /**
      @property KEYUP
      @type String
      @static
      @final
      @private
     */
    KEYUP = 'keyup';

    /**
      @property TOUCHMOVE
      @type String
      @static
      @final
      @private
     */
    TOUCHMOVE = 'touchmove';

    /**
      @property BROWSER_IS_IE7
      @type Boolean
      @static
      @final
      @private
     */
    BROWSER_IS_IE7 = window.navigator.appName === 'Microsoft Internet Explorer' && /msie 7./i.test(window.navigator.appVersion) && window.ActiveXObject;

    /**
      @property BROWSER_SCROLLBAR_WIDTH
      @type Number
      @static
      @default null
      @private
     */
    BROWSER_SCROLLBAR_WIDTH = null;
    rAF = window.requestAnimationFrame;
    cAF = window.cancelAnimationFrame;
    _elementStyle = document.createElement('div').style;
    _vendor = (function () {
        var i, transform, vendor, vendors, _i, _len;
        vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'];
        for (i = _i = 0, _len = vendors.length; _i < _len; i = ++_i) {
            vendor = vendors[i];
            transform = vendors[i] + 'ransform';
            if (transform in _elementStyle) {
                return vendors[i].substr(0, vendors[i].length - 1);
            }
        }
        return false;
    })();
    _prefixStyle = function (style) {
        if (_vendor === false) {
            return false;
        }
        if (_vendor === '') {
            return style;
        }
        return _vendor + style.charAt(0).toUpperCase() + style.substr(1);
    };
    transform = _prefixStyle('transform');
    hasTransform = transform !== false;

    /**
      Returns browser's native scrollbar width
      @method getBrowserScrollbarWidth
      @return {Number} the scrollbar width in pixels
      @static
      @private
     */
    getBrowserScrollbarWidth = function () {
        var outer, outerStyle, scrollbarWidth;
        outer = document.createElement('div');
        outerStyle = outer.style;
        outerStyle.position = 'absolute';
        outerStyle.width = '100px';
        outerStyle.height = '100px';
        outerStyle.overflow = SCROLL;
        outerStyle.top = '-9999px';
        document.body.appendChild(outer);
        scrollbarWidth = outer.offsetWidth - outer.clientWidth;
        document.body.removeChild(outer);
        return scrollbarWidth;
    };
    isFFWithBuggyScrollbar = function () {
        var isOSXFF, ua, version;
        ua = window.navigator.userAgent;
        isOSXFF = /(?=.+Mac OS X)(?=.+Firefox)/.test(ua);
        if (!isOSXFF) {
            return false;
        }
        version = /Firefox\/\d{2}\./.exec(ua);
        if (version) {
            version = version[0].replace(/\D+/g, '');
        }
        return isOSXFF && +version > 23;
    };

    /**
      @class NanoScroll
      @param element {HTMLElement|Node} the main element
      @param options {Object} nanoScroller's options
      @constructor
     */
    NanoScroll = (function () {
        function NanoScroll(el, options) {
            this.el = el;
            this.options = options;
            BROWSER_SCROLLBAR_WIDTH || (BROWSER_SCROLLBAR_WIDTH = getBrowserScrollbarWidth());
            this.$el = $(this.el);
            this.doc = $(this.options.documentContext || document);
            this.win = $(this.options.windowContext || window);
            this.body = this.doc.find('body');
            this.$content = this.$el.children("." + this.options.contentClass);
            this.$content.attr('tabindex', this.options.tabIndex || 0);
            this.content = this.$content[0];
            this.previousPosition = 0;
            if (this.options.iOSNativeScrolling && (this.el.style.WebkitOverflowScrolling != null)) {
                this.nativeScrolling();
            } else {
                this.generate();
            }
            this.createEvents();
            this.addEvents();
            this.reset();
        }


        /**
          Prevents the rest of the page being scrolled
          when user scrolls the `.nano-content` element.
          @method preventScrolling
          @param event {Event}
          @param direction {String} Scroll direction (up or down)
          @private
         */

        NanoScroll.prototype.preventScrolling = function (e, direction) {
            if (!this.isActive) {
                return;
            }
            if (e.type === DOMSCROLL) {
                if (direction === DOWN && e.originalEvent.detail > 0 || direction === UP && e.originalEvent.detail < 0) {
                    e.preventDefault();
                }
            } else if (e.type === MOUSEWHEEL) {
                if (!e.originalEvent || !e.originalEvent.wheelDelta) {
                    return;
                }
                if (direction === DOWN && e.originalEvent.wheelDelta < 0 || direction === UP && e.originalEvent.wheelDelta > 0) {
                    e.preventDefault();
                }
            }
        };


        /**
          Enable iOS native scrolling
          @method nativeScrolling
          @private
         */

        NanoScroll.prototype.nativeScrolling = function () {
            this.$content.css({
                WebkitOverflowScrolling: 'touch'
            });
            this.iOSNativeScrolling = true;
            this.isActive = true;
        };


        /**
          Updates those nanoScroller properties that
          are related to current scrollbar position.
          @method updateScrollValues
          @private
         */

        NanoScroll.prototype.updateScrollValues = function () {
            var content, direction;
            content = this.content;
            this.maxScrollTop = content.scrollHeight - content.clientHeight;
            this.prevScrollTop = this.contentScrollTop || 0;
            this.contentScrollTop = content.scrollTop;
            direction = this.contentScrollTop > this.previousPosition ? "down" : this.contentScrollTop < this.previousPosition ? "up" : "same";
            this.previousPosition = this.contentScrollTop;
            if (direction !== "same") {
                this.$el.trigger('update', {
                    position: this.contentScrollTop,
                    maximum: this.maxScrollTop,
                    direction: direction
                });
            }
            if (!this.iOSNativeScrolling) {
                this.maxSliderTop = this.paneHeight - this.sliderHeight;
                this.sliderTop = this.maxScrollTop === 0 ? 0 : this.contentScrollTop * this.maxSliderTop / this.maxScrollTop;
            }
        };


        /**
          Updates CSS styles for current scroll position.
          Uses CSS 2d transfroms and `window.requestAnimationFrame` if available.
          @method setOnScrollStyles
          @private
         */

        NanoScroll.prototype.setOnScrollStyles = function () {
            var cssValue;
            if (hasTransform) {
                cssValue = {};
                cssValue[transform] = "translate(0, " + this.sliderTop + "px)";
            } else {
                cssValue = {
                    top: this.sliderTop
                };
            }
            if (rAF) {
                if (cAF && this.scrollRAF) {
                    cAF(this.scrollRAF);
                }
                this.scrollRAF = rAF((function (_this) {
                    return function () {
                        _this.scrollRAF = null;
                        return _this.slider.css(cssValue);
                    };
                })(this));
            } else {
                this.slider.css(cssValue);
            }
        };


        /**
          Creates event related methods
          @method createEvents
          @private
         */

        NanoScroll.prototype.createEvents = function () {
            this.events = {
                down: (function (_this) {
                    return function (e) {
                        _this.isBeingDragged = true;
                        _this.offsetY = e.pageY - _this.slider.offset().top;
                        if (!_this.slider.is(e.target)) {
                            _this.offsetY = 0;
                        }
                        _this.pane.addClass('active');
                        _this.doc.bind(MOUSEMOVE, _this.events[DRAG]).bind(MOUSEUP, _this.events[UP]);
                        _this.body.bind(MOUSEENTER, _this.events[ENTER]);
                        return false;
                    };
                })(this),
                drag: (function (_this) {
                    return function (e) {
                        _this.sliderY = e.pageY - _this.$el.offset().top - _this.paneTop - (_this.offsetY || _this.sliderHeight * 0.5);
                        _this.scroll();
                        if (_this.contentScrollTop >= _this.maxScrollTop && _this.prevScrollTop !== _this.maxScrollTop) {
                            _this.$el.trigger('scrollend');
                        } else if (_this.contentScrollTop === 0 && _this.prevScrollTop !== 0) {
                            _this.$el.trigger('scrolltop');
                        }
                        return false;
                    };
                })(this),
                up: (function (_this) {
                    return function (e) {
                        _this.isBeingDragged = false;
                        _this.pane.removeClass('active');
                        _this.doc.unbind(MOUSEMOVE, _this.events[DRAG]).unbind(MOUSEUP, _this.events[UP]);
                        _this.body.unbind(MOUSEENTER, _this.events[ENTER]);
                        return false;
                    };
                })(this),
                resize: (function (_this) {
                    return function (e) {
                        _this.reset();
                    };
                })(this),
                panedown: (function (_this) {
                    return function (e) {
                        _this.sliderY = (e.offsetY || e.originalEvent.layerY) - (_this.sliderHeight * 0.5);
                        _this.scroll();
                        _this.events.down(e);
                        return false;
                    };
                })(this),
                scroll: (function (_this) {
                    return function (e) {
                        _this.updateScrollValues();
                        if (_this.isBeingDragged) {
                            return;
                        }
                        if (!_this.iOSNativeScrolling) {
                            _this.sliderY = _this.sliderTop;
                            _this.setOnScrollStyles();
                        }
                        if (e == null) {
                            return;
                        }
                        if (_this.contentScrollTop >= _this.maxScrollTop) {
                            if (_this.options.preventPageScrolling) {
                                _this.preventScrolling(e, DOWN);
                            }
                            if (_this.prevScrollTop !== _this.maxScrollTop) {
                                _this.$el.trigger('scrollend');
                            }
                        } else if (_this.contentScrollTop === 0) {
                            if (_this.options.preventPageScrolling) {
                                _this.preventScrolling(e, UP);
                            }
                            if (_this.prevScrollTop !== 0) {
                                _this.$el.trigger('scrolltop');
                            }
                        }
                    };
                })(this),
                wheel: (function (_this) {
                    return function (e) {
                        var delta;
                        if (e == null) {
                            return;
                        }
                        delta = e.delta || e.wheelDelta || (e.originalEvent && e.originalEvent.wheelDelta) || -e.detail || (e.originalEvent && -e.originalEvent.detail);
                        if (delta) {
                            _this.sliderY += -delta / 3;
                        }
                        _this.scroll();
                        return false;
                    };
                })(this),
                enter: (function (_this) {
                    return function (e) {
                        var _ref;
                        if (!_this.isBeingDragged) {
                            return;
                        }
                        if ((e.buttons || e.which) !== 1) {
                            return (_ref = _this.events)[UP].apply(_ref, arguments);
                        }
                    };
                })(this)
            };
        };


        /**
          Adds event listeners with jQuery.
          @method addEvents
          @private
         */

        NanoScroll.prototype.addEvents = function () {
            var events;
            this.removeEvents();
            events = this.events;
            if (!this.options.disableResize) {
                this.win.bind(RESIZE, events[RESIZE]);
            }
            if (!this.iOSNativeScrolling) {
                this.slider.bind(MOUSEDOWN, events[DOWN]);
                this.pane.bind(MOUSEDOWN, events[PANEDOWN]).bind("" + MOUSEWHEEL + " " + DOMSCROLL, events[WHEEL]);
            }
            this.$content.bind("" + SCROLL + " " + MOUSEWHEEL + " " + DOMSCROLL + " " + TOUCHMOVE, events[SCROLL]);
        };


        /**
          Removes event listeners with jQuery.
          @method removeEvents
          @private
         */

        NanoScroll.prototype.removeEvents = function () {
            var events;
            events = this.events;
            this.win.unbind(RESIZE, events[RESIZE]);
            if (!this.iOSNativeScrolling) {
                this.slider.unbind();
                this.pane.unbind();
            }
            this.$content.unbind("" + SCROLL + " " + MOUSEWHEEL + " " + DOMSCROLL + " " + TOUCHMOVE, events[SCROLL]);
        };


        /**
          Generates nanoScroller's scrollbar and elements for it.
          @method generate
          @chainable
          @private
         */

        NanoScroll.prototype.generate = function () {
            var contentClass, cssRule, currentPadding, options, pane, paneClass, sliderClass;
            options = this.options;
            paneClass = options.paneClass, sliderClass = options.sliderClass, contentClass = options.contentClass;
            if (!(pane = this.$el.children("." + paneClass)).length && !pane.children("." + sliderClass).length) {
                this.$el.append("<div class=\"" + paneClass + "\"><div class=\"" + sliderClass + "\" /></div>");
            }
            this.pane = this.$el.children("." + paneClass);
            this.slider = this.pane.find("." + sliderClass);
            if (BROWSER_SCROLLBAR_WIDTH === 0 && isFFWithBuggyScrollbar()) {
                currentPadding = window.getComputedStyle(this.content, null).getPropertyValue('padding-right').replace(/[^0-9.]+/g, '');
                cssRule = {
                    right: -14,
                    paddingRight: +currentPadding + 14
                };
            } else if (BROWSER_SCROLLBAR_WIDTH) {
                cssRule = {
                    right: -BROWSER_SCROLLBAR_WIDTH
                };
                this.$el.addClass('has-scrollbar');
            }
            if (cssRule != null) {
                this.$content.css(cssRule);
            }
            return this;
        };


        /**
          @method restore
          @private
         */

        NanoScroll.prototype.restore = function () {
            this.stopped = false;
            if (!this.iOSNativeScrolling) {
                this.pane.show();
            }
            this.addEvents();
        };


        /**
          Resets nanoScroller's scrollbar.
          @method reset
          @chainable
          @example
              $(".nano").nanoScroller();
         */

        NanoScroll.prototype.reset = function () {
            var content, contentHeight, contentPosition, contentStyle, contentStyleOverflowY, paneBottom, paneHeight, paneOuterHeight, paneTop, parentMaxHeight, right, sliderHeight;
            if (this.iOSNativeScrolling) {
                this.contentHeight = this.content.scrollHeight;
                return;
            }
            if (!this.$el.find("." + this.options.paneClass).length) {
                this.generate().stop();
            }
            if (this.stopped) {
                this.restore();
            }
            content = this.content;
            contentStyle = content.style;
            contentStyleOverflowY = contentStyle.overflowY;
            if (BROWSER_IS_IE7) {
                this.$content.css({
                    height: this.$content.height()
                });
            }
            contentHeight = content.scrollHeight + BROWSER_SCROLLBAR_WIDTH;
            parentMaxHeight = parseInt(this.$el.css("max-height"), 10);
            if (parentMaxHeight > 0) {
                this.$el.height("");
                this.$el.height(content.scrollHeight > parentMaxHeight ? parentMaxHeight : content.scrollHeight);
            }
            paneHeight = this.pane.outerHeight(false);
            paneTop = parseInt(this.pane.css('top'), 10);
            paneBottom = parseInt(this.pane.css('bottom'), 10);
            paneOuterHeight = paneHeight + paneTop + paneBottom;
            sliderHeight = Math.round(paneOuterHeight / contentHeight * paneHeight);
            if (sliderHeight < this.options.sliderMinHeight) {
                sliderHeight = this.options.sliderMinHeight;
            } else if ((this.options.sliderMaxHeight != null) && sliderHeight > this.options.sliderMaxHeight) {
                sliderHeight = this.options.sliderMaxHeight;
            }
            if (contentStyleOverflowY === SCROLL && contentStyle.overflowX !== SCROLL) {
                sliderHeight += BROWSER_SCROLLBAR_WIDTH;
            }
            this.maxSliderTop = paneOuterHeight - sliderHeight;
            this.contentHeight = contentHeight;
            this.paneHeight = paneHeight;
            this.paneOuterHeight = paneOuterHeight;
            this.sliderHeight = sliderHeight;
            this.paneTop = paneTop;
            this.slider.height(sliderHeight);
            this.events.scroll();
            this.pane.show();
            this.isActive = true;
            if ((content.scrollHeight === content.clientHeight) || (this.pane.outerHeight(true) >= content.scrollHeight && contentStyleOverflowY !== SCROLL)) {
                this.pane.hide();
                this.isActive = false;
            } else if (this.el.clientHeight === content.scrollHeight && contentStyleOverflowY === SCROLL) {
                this.slider.hide();
            } else {
                this.slider.show();
            }
            this.pane.css({
                opacity: (this.options.alwaysVisible ? 1 : ''),
                visibility: (this.options.alwaysVisible ? 'visible' : '')
            });
            contentPosition = this.$content.css('position');
            if (contentPosition === 'static' || contentPosition === 'relative') {
                right = parseInt(this.$content.css('right'), 10);
                if (right) {
                    this.$content.css({
                        right: '',
                        marginRight: right
                    });
                }
            }
            return this;
        };


        /**
          @method scroll
          @private
          @example
              $(".nano").nanoScroller({ scroll: 'top' });
         */

        NanoScroll.prototype.scroll = function () {
            if (!this.isActive) {
                return;
            }
            this.sliderY = Math.max(0, this.sliderY);
            this.sliderY = Math.min(this.maxSliderTop, this.sliderY);
            this.$content.scrollTop(this.maxScrollTop * this.sliderY / this.maxSliderTop);
            if (!this.iOSNativeScrolling) {
                this.updateScrollValues();
                this.setOnScrollStyles();
            }
            return this;
        };


        /**
          Scroll at the bottom with an offset value
          @method scrollBottom
          @param offsetY {Number}
          @chainable
          @example
              $(".nano").nanoScroller({ scrollBottom: value });
         */

        NanoScroll.prototype.scrollBottom = function (offsetY) {
            if (!this.isActive) {
                return;
            }
            this.$content.scrollTop(this.contentHeight - this.$content.height() - offsetY).trigger(MOUSEWHEEL);
            this.stop().restore();
            return this;
        };


        /**
          Scroll at the top with an offset value
          @method scrollTop
          @param offsetY {Number}
          @chainable
          @example
              $(".nano").nanoScroller({ scrollTop: value });
         */

        NanoScroll.prototype.scrollTop = function (offsetY) {
            if (!this.isActive) {
                return;
            }
            this.$content.scrollTop(+offsetY).trigger(MOUSEWHEEL);
            this.stop().restore();
            return this;
        };


        /**
          Scroll to an element
          @method scrollTo
          @param node {Node} A node to scroll to.
          @chainable
          @example
              $(".nano").nanoScroller({ scrollTo: $('#a_node') });
         */

        NanoScroll.prototype.scrollTo = function (node) {
            if (!this.isActive) {
                return;
            }
            this.scrollTop(this.$el.find(node).get(0).offsetTop);
            return this;
        };


        /**
          To stop the operation.
          This option will tell the plugin to disable all event bindings and hide the gadget scrollbar from the UI.
          @method stop
          @chainable
          @example
              $(".nano").nanoScroller({ stop: true });
         */

        NanoScroll.prototype.stop = function () {
            if (cAF && this.scrollRAF) {
                cAF(this.scrollRAF);
                this.scrollRAF = null;
            }
            this.stopped = true;
            this.removeEvents();
            if (!this.iOSNativeScrolling) {
                this.pane.hide();
            }
            return this;
        };


        /**
          Destroys nanoScroller and restores browser's native scrollbar.
          @method destroy
          @chainable
          @example
              $(".nano").nanoScroller({ destroy: true });
         */

        NanoScroll.prototype.destroy = function () {
            if (!this.stopped) {
                this.stop();
            }
            if (!this.iOSNativeScrolling && this.pane.length) {
                this.pane.remove();
            }
            if (BROWSER_IS_IE7) {
                this.$content.height('');
            }
            this.$content.removeAttr('tabindex');
            if (this.$el.hasClass('has-scrollbar')) {
                this.$el.removeClass('has-scrollbar');
                this.$content.css({
                    right: ''
                });
            }
            return this;
        };


        /**
          To flash the scrollbar gadget for an amount of time defined in plugin settings (defaults to 1,5s).
          Useful if you want to show the user (e.g. on pageload) that there is more content waiting for him.
          @method flash
          @chainable
          @example
              $(".nano").nanoScroller({ flash: true });
         */

        NanoScroll.prototype.flash = function () {
            if (this.iOSNativeScrolling) {
                return;
            }
            if (!this.isActive) {
                return;
            }
            this.reset();
            this.pane.addClass('flashed');
            setTimeout((function (_this) {
                return function () {
                    _this.pane.removeClass('flashed');
                };
            })(this), this.options.flashDelay);
            return this;
        };

        return NanoScroll;

    })();
    $.fn.nanoScroller = function (settings) {
        return this.each(function () {
            var options, scrollbar;
            if (!(scrollbar = this.nanoscroller)) {
                options = $.extend({}, defaults, settings);
                this.nanoscroller = scrollbar = new NanoScroll(this, options);
            }
            if (settings && typeof settings === "object") {
                $.extend(scrollbar.options, settings);
                if (settings.scrollBottom != null) {
                    return scrollbar.scrollBottom(settings.scrollBottom);
                }
                if (settings.scrollTop != null) {
                    return scrollbar.scrollTop(settings.scrollTop);
                }
                if (settings.scrollTo) {
                    return scrollbar.scrollTo(settings.scrollTo);
                }
                if (settings.scroll === 'bottom') {
                    return scrollbar.scrollBottom(0);
                }
                if (settings.scroll === 'top') {
                    return scrollbar.scrollTop(0);
                }
                if (settings.scroll && settings.scroll instanceof $) {
                    return scrollbar.scrollTo(settings.scroll);
                }
                if (settings.stop) {
                    return scrollbar.stop();
                }
                if (settings.destroy) {
                    return scrollbar.destroy();
                }
                if (settings.flash) {
                    return scrollbar.flash();
                }
            }
            return scrollbar.reset();
        });
    };
    $.fn.nanoScroller.Constructor = NanoScroll;
});

//# sourceMappingURL=jquery.nanoscroller.js.map
/*!
 * amaretti v0.0.1 (http://foxythemes.net/themes/amaretti)
 * Copyright 2014-2015 Foxy Themes all rights reserved 
 */
var App = (function () {
    'use strict';

    //Basic Config
    var config = {
        assetsPath: 'assets',
        imgPath: 'img',
        jsPath: 'js',
        libsPath: 'lib',
        leftSidebarSlideSpeed: 200,
        swipeTreshold: 100,
        scrollTop: true,
        openLeftSidebarClass: 'open-left-sidebar',
        openRightSidebarClass: 'open-right-sidebar',
        removeLeftSidebarClass: 'am-nosidebar-left',
        transitionClass: 'am-animate',
        openSidebarDelay: 400,
        syncSubMenuOnHover: false
    };

    var colors = {};
    var body = $("body");
    var wrapper = $(".am-wrapper");
    var leftSidebar = $(".am-left-sidebar");
    var rightSidebar = $(".am-right-sidebar");
    var openSidebar = false;

    //Get the template css colors into js vars
    function getColor(c) {
        var tmp = $("<div>", { class: c }).appendTo("body");
        var color = tmp.css("background-color");
        tmp.remove();

        return color;
    }

    //Core private functions
    function leftSidebarInit() {

        function oSidebar() {
            body.addClass(config.openLeftSidebarClass + " " + config.transitionClass);
            openSidebar = true;
        }

        function cSidebar() {
            body.removeClass(config.openLeftSidebarClass).addClass(config.transitionClass);
            sidebarDelay();
        }

        function syncSubMenu(item) {
            var elements = $(".sidebar-elements > li", leftSidebar);

            if (typeof item !== "undefined") {
                elements = item;
            }

            $.each(elements, function (i, v) {

                var title = $(this).find("> a span").html();
                var ul = $(this).find("> ul");
                var subEls = $("> li", ul);
                var title = $('<li class="title">' + title + '</li>');
                var subContainer = $('<li class="nav-items"><div class="am-scroller nano"><div class="content nano-content"><ul></ul></div></div></li>');

                if (!ul.find("> li.title").length > 0) {
                    ul.prepend(title);
                    subEls.appendTo(subContainer.find(".content ul"));
                    subContainer.appendTo(ul);
                }
            });
        }

        /*Open-Sidebar when click on topbar button*/
        $('.am-toggle-left-sidebar').on("click", function (e) {
            if (openSidebar && body.hasClass(config.openLeftSidebarClass)) {
                cSidebar();
            } else if (!openSidebar) {
                oSidebar();
            }
            e.stopPropagation();
            e.preventDefault();
        });

        /*Close sidebar on click outside*/
        $(document).on("touchstart mousedown", function (e) {
            if (!$(e.target).closest(leftSidebar).length && body.hasClass(config.openLeftSidebarClass)) {
                cSidebar();
            }
        });

        var firstAnchor = $(".sidebar-elements > li > a", leftSidebar);

        /*Sub-menu title func*/
        firstAnchor.on('mouseover', function () {
            var amScroller = $(this).parent().find(".am-scroller");
            var li = $(this).parent();
            var subMenu = li.find("> ul");

            //Delay after mouse leave
            if (!$.isXs()) {
                subMenu.addClass("visible");
            }

            amScroller.nanoScroller({ destroy: true });
            amScroller.nanoScroller();

            //Create sub-menu elements
            if (config.syncSubMenuOnHover) {
                syncSubMenu(li);
            }

        });

        /*Sub-menu delay on mouse leave*/
        firstAnchor.on('mouseleave', function () {
            var subMenu = $(this).parent().find("> ul");

            if (!$.isXs()) {
                setTimeout(function () {
                    subMenu.removeClass("visible");
                }, 300);
            }
        });

        /*Open sub-menu on small devices*/
        $(".sidebar-elements li a", leftSidebar).on("click", function (e) {
            if ($.isXs()) {
                var $el = $(this), $open, $speed = config.leftSidebarSlideSpeed;

                $open = $el.parent().siblings(".open");

                if ($open) {
                    $open.toggleClass('open').find('> ul:visible').slideUp({ duration: $speed });
                }

                if ($el.parent().hasClass('open')) {
                    $el.next().slideUp({
                        duration: $speed, complete: function () {
                            $el.parent().toggleClass('open');
                        }
                    });
                } else {
                    $el.next().slideDown({
                        duration: $speed, complete: function () {
                            $el.parent().toggleClass('open');
                        }
                    });
                }

                if ($el.next().is('ul')) {
                    e.preventDefault();
                }
            } else {//Close sub-menu on anchor click
                var subMenu = $(".sidebar-elements > li > ul:visible", leftSidebar);
                subMenu.addClass('hide');
                setTimeout(function () {
                    subMenu.removeClass('hide');
                }, 50);
            }
        });

        /*Calculate sidebar tree active & open classes*/
        $("li.active", leftSidebar).parents(".parent").addClass("active open");

        /*Create sub menu elements*/
        syncSubMenu();

        /*Nanoscroller when left sidebar is fixed*/
        if (wrapper.hasClass("am-fixed-sidebar")) {
            var lsc = $(".am-left-sidebar > .content");
            lsc.wrap('<div class="am-scroller nano"></div>');
            lsc.addClass("nano-content");
            lsc.parent().nanoScroller();
        }

        /*On window resize check for small resolution classes to remove them*/
        $(window).resize(function () {
            waitForFinalEvent(function () {
                if (!$.isXs()) {
                    var scroller = $(".am-scroller");
                    scroller.nanoScroller({ destroy: true });
                    scroller.nanoScroller();
                }
            }, 500, "am_check_phone_classes");
        });
    }

    function rightSidebarInit() {

        function oSidebar() {
            body.addClass(config.openRightSidebarClass + " " + config.transitionClass);
        }

        function cSidebar() {
            body.removeClass(config.openRightSidebarClass).addClass(config.transitionClass);
            sidebarDelay();
        }

        if (rightSidebar.length > 0) {
            /*Open-Sidebar when click on topbar button*/
            $('.am-toggle-right-sidebar').on("click", function (e) {
                if (openSidebar && body.hasClass(config.openRightSidebarClass)) {
                    cSidebar();
                } else if (!openSidebar) {
                    oSidebar();
                }

                e.stopPropagation();
                e.preventDefault();
            });

            /*Close sidebar on click outside*/
            $(document).on("mousedown touchstart", function (e) {
                if (!$(e.target).closest(rightSidebar).length && body.hasClass(config.openRightSidebarClass)) {
                    cSidebar();
                }
            });
        }
    }

    function sidebarDelay() {
        openSidebar = true;
        setTimeout(function () {
            openSidebar = false;
        }, config.openSidebarDelay);
    }

    function sidebarSwipe() {
        /*Open sidedar on swipe*/
        wrapper.swipe({
            allowPageScroll: "vertical",
            preventDefaultEvents: false,
            fallbackToMouseEvents: false,
            swipeRight: function (e) {
                if (!openSidebar && !wrapper.hasClass(config.removeLeftSidebarClass)) {
                    body.addClass(config.openLeftSidebarClass + " " + config.transitionClass);
                    openSidebar = true;
                }
            },
            swipeLeft: function (e) {
                if (!openSidebar && rightSidebar.length > 0) {
                    body.addClass(config.openRightSidebarClass + " " + config.transitionClass);
                    openSidebar = true;
                }
            },
            threshold: config.swipeTreshold
        });
    }

    function chatWidget() {
        var chat = $(".am-right-sidebar .tab-pane.chat");
        var contactsEl = $(".chat-contacts", chat);
        var conversationEl = $(".chat-window", chat);
        var messagesContainer = $(".chat-messages", conversationEl);
        var messagesList = $(".content > ul", messagesContainer);
        var messagesScrollContent = $(".nano-content", messagesContainer);
        var chatInputContainer = $(".chat-input", conversationEl);
        var chatInput = $("input", chatInputContainer);
        var chatInputSendButton = $(".send-msg", chatInputContainer);

        function openChatWindow() {
            if (!chat.hasClass("chat-opened")) {
                chat.addClass("chat-opened");
                $(".am-scroller", messagesContainer).nanoScroller();
            }
        }

        function closeChatWindow() {
            if (chat.hasClass("chat-opened")) {
                chat.removeClass("chat-opened");
            }
        }

        /*Open Conversation Window when click on chat user*/
        $(".user a", contactsEl).on('click', function (e) {
            $(".am-scroller", contactsEl).nanoScroller({ stop: true });
            openChatWindow();
            e.preventDefault();
        });

        /*Close chat conv window*/
        $(".title .return", conversationEl).on('click', function (e) {
            closeChatWindow();
            scrollerInit();
        });

        /*Send message*/
        function sendMsg(msg, self) {
            var $message = $('<li class="' + ((self) ? 'self' : 'friend') + '"></li>');

            if (msg != '') {
                $('<div class="msg">' + msg + '</div>').appendTo($message);
                $message.appendTo(messagesList);

                messagesScrollContent.stop().animate({
                    'scrollTop': messagesScrollContent.prop("scrollHeight")
                }, 900, 'swing');

                scrollerInit();
            }
        }

        /*Send msg when click on 'send' button or press 'Enter'*/
        chatInput.keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            var msg = $(this).val();

            if (keycode == '13') {
                sendMsg(msg, true);
                $(this).val("");
            }
            event.stopPropagation();
        });

        chatInputSendButton.on('click', function () {
            var msg = chatInput.val();
            sendMsg(msg, true);
            chatInput.val("");
        });
    }

    function scrollerInit() {
        $(".am-scroller").nanoScroller();
    }

    function scrollTopButton() {
        var offset = 220;
        var duration = 500;
        var button = $('<div class="am-scroll-top"></div>');
        button.appendTo("body");

        $(window).on('scroll', function () {
            if ($(this).scrollTop() > offset) {
                button.fadeIn(duration);
            } else {
                button.fadeOut(duration);
            }
        });

        button.on('touchstart mouseup', function (e) {
            $('html, body').animate({ scrollTop: 0 }, duration);
            e.preventDefault();
        });
    }

    //Wait for final event on window resize
    var waitForFinalEvent = (function () {
        var timers = {};
        return function (callback, ms, uniqueId) {
            if (!uniqueId) {
                uniqueId = "x1x2x3x4";
            }
            if (timers[uniqueId]) {
                clearTimeout(timers[uniqueId]);
            }
            timers[uniqueId] = setTimeout(callback, ms);
        };
    })();

    return {
        //General data
        conf: config,
        color: colors,

        //Init function
        init: function (options) {

            //Extends basic config with options
            $.extend(config, options);

            /*FastClick on mobile*/
            FastClick.attach(document.body);

            /*Left Sidebar*/
            leftSidebarInit();

            /*Right Sidebar*/
            rightSidebarInit();
            chatWidget();

            /*Sidebars Swipe*/
            sidebarSwipe();

            /*Body transition effect*/
            leftSidebar.on("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function () {
                body.removeClass(config.transitionClass);
            });

            /*Scroll Top button*/
            if (config.scrollTop) {
                scrollTopButton();
            }

            /*Get colors*/
            colors.primary = getColor('clr-primary');
            colors.success = getColor('clr-success');
            colors.info = getColor('clr-info');
            colors.warning = getColor('clr-warning');
            colors.danger = getColor('clr-danger');
            colors.alt1 = getColor('clr-alt1');
            colors.alt2 = getColor('clr-alt2');
            colors.alt3 = getColor('clr-alt3');
            colors.alt4 = getColor('clr-alt4');

            //Prevent Connections Dropdown closes on click
            $(".am-connections").on("click", function (e) {
                e.stopPropagation();
            });

            //Nanoscroller init function
            scrollerInit();

            /*Bind plugins on hidden elements*/
            /*Dropdown shown event*/
            $('.dropdown').on('shown.bs.dropdown', function () {
                $(".am-scroller").nanoScroller();
            });

            /*Tabs refresh hidden elements*/
            $('.nav-tabs').on('shown.bs.tab', function (e) {
                $(".am-scroller").nanoScroller();
            });

            /*Tooltips*/
            $('[data-toggle="tooltip"]').tooltip();

            /*Popover*/
            $('[data-toggle="popover"]').popover();

            /*Bootstrap modal scroll top fix*/
            $('.modal').on('show.bs.modal', function () {
                $("html").addClass('am-modal-open');
            });

            $('.modal').on('hidden.bs.modal', function () {
                $("html").removeClass('am-modal-open');
            });
        },

        //Methods
        closeSubMenu: function () {
            var subMenu = $(".sidebar-elements > li > ul:visible", leftSidebar);
            subMenu.addClass('hide');
            setTimeout(function () {
                subMenu.removeClass('hide');
            }, 50);
        }
    };

})();
//FastClick
!function () { "use strict"; function a(b, d) { function e(a, b) { return function () { return a.apply(b, arguments) } } var f; if (d = d || {}, this.trackingClick = !1, this.trackingClickStart = 0, this.targetElement = null, this.touchStartX = 0, this.touchStartY = 0, this.lastTouchIdentifier = 0, this.touchBoundary = d.touchBoundary || 10, this.layer = b, this.tapDelay = d.tapDelay || 200, this.tapTimeout = d.tapTimeout || 700, !a.notNeeded(b)) { for (var g = ["onMouse", "onClick", "onTouchStart", "onTouchMove", "onTouchEnd", "onTouchCancel"], h = this, i = 0, j = g.length; j > i; i++) h[g[i]] = e(h[g[i]], h); c && (b.addEventListener("mouseover", this.onMouse, !0), b.addEventListener("mousedown", this.onMouse, !0), b.addEventListener("mouseup", this.onMouse, !0)), b.addEventListener("click", this.onClick, !0), b.addEventListener("touchstart", this.onTouchStart, !1), b.addEventListener("touchmove", this.onTouchMove, !1), b.addEventListener("touchend", this.onTouchEnd, !1), b.addEventListener("touchcancel", this.onTouchCancel, !1), Event.prototype.stopImmediatePropagation || (b.removeEventListener = function (a, c, d) { var e = Node.prototype.removeEventListener; "click" === a ? e.call(b, a, c.hijacked || c, d) : e.call(b, a, c, d) }, b.addEventListener = function (a, c, d) { var e = Node.prototype.addEventListener; "click" === a ? e.call(b, a, c.hijacked || (c.hijacked = function (a) { a.propagationStopped || c(a) }), d) : e.call(b, a, c, d) }), "function" == typeof b.onclick && (f = b.onclick, b.addEventListener("click", function (a) { f(a) }, !1), b.onclick = null) } } var b = navigator.userAgent.indexOf("Windows Phone") >= 0, c = navigator.userAgent.indexOf("Android") > 0 && !b, d = /iP(ad|hone|od)/.test(navigator.userAgent) && !b, e = d && /OS 4_\d(_\d)?/.test(navigator.userAgent), f = d && /OS [6-7]_\d/.test(navigator.userAgent), g = navigator.userAgent.indexOf("BB10") > 0; a.prototype.needsClick = function (a) { switch (a.nodeName.toLowerCase()) { case "button": case "select": case "textarea": if (a.disabled) return !0; break; case "input": if (d && "file" === a.type || a.disabled) return !0; break; case "label": case "iframe": case "video": return !0 } return /\bneedsclick\b/.test(a.className) }, a.prototype.needsFocus = function (a) { switch (a.nodeName.toLowerCase()) { case "textarea": return !0; case "select": return !c; case "input": switch (a.type) { case "button": case "checkbox": case "file": case "image": case "radio": case "submit": return !1 } return !a.disabled && !a.readOnly; default: return /\bneedsfocus\b/.test(a.className) } }, a.prototype.sendClick = function (a, b) { var c, d; document.activeElement && document.activeElement !== a && document.activeElement.blur(), d = b.changedTouches[0], c = document.createEvent("MouseEvents"), c.initMouseEvent(this.determineEventType(a), !0, !0, window, 1, d.screenX, d.screenY, d.clientX, d.clientY, !1, !1, !1, !1, 0, null), c.forwardedTouchEvent = !0, a.dispatchEvent(c) }, a.prototype.determineEventType = function (a) { return c && "select" === a.tagName.toLowerCase() ? "mousedown" : "click" }, a.prototype.focus = function (a) { var b; d && a.setSelectionRange && 0 !== a.type.indexOf("date") && "time" !== a.type && "month" !== a.type ? (b = a.value.length, a.setSelectionRange(b, b)) : a.focus() }, a.prototype.updateScrollParent = function (a) { var b, c; if (b = a.fastClickScrollParent, !b || !b.contains(a)) { c = a; do { if (c.scrollHeight > c.offsetHeight) { b = c, a.fastClickScrollParent = c; break } c = c.parentElement } while (c) } b && (b.fastClickLastScrollTop = b.scrollTop) }, a.prototype.getTargetElementFromEventTarget = function (a) { return a.nodeType === Node.TEXT_NODE ? a.parentNode : a }, a.prototype.onTouchStart = function (a) { var b, c, f; if (a.targetTouches.length > 1) return !0; if (b = this.getTargetElementFromEventTarget(a.target), c = a.targetTouches[0], d) { if (f = window.getSelection(), f.rangeCount && !f.isCollapsed) return !0; if (!e) { if (c.identifier && c.identifier === this.lastTouchIdentifier) return a.preventDefault(), !1; this.lastTouchIdentifier = c.identifier, this.updateScrollParent(b) } } return this.trackingClick = !0, this.trackingClickStart = a.timeStamp, this.targetElement = b, this.touchStartX = c.pageX, this.touchStartY = c.pageY, a.timeStamp - this.lastClickTime < this.tapDelay && a.preventDefault(), !0 }, a.prototype.touchHasMoved = function (a) { var b = a.changedTouches[0], c = this.touchBoundary; return Math.abs(b.pageX - this.touchStartX) > c || Math.abs(b.pageY - this.touchStartY) > c ? !0 : !1 }, a.prototype.onTouchMove = function (a) { return this.trackingClick ? ((this.targetElement !== this.getTargetElementFromEventTarget(a.target) || this.touchHasMoved(a)) && (this.trackingClick = !1, this.targetElement = null), !0) : !0 }, a.prototype.findControl = function (a) { return void 0 !== a.control ? a.control : a.htmlFor ? document.getElementById(a.htmlFor) : a.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea") }, a.prototype.onTouchEnd = function (a) { var b, g, h, i, j, k = this.targetElement; if (!this.trackingClick) return !0; if (a.timeStamp - this.lastClickTime < this.tapDelay) return this.cancelNextClick = !0, !0; if (a.timeStamp - this.trackingClickStart > this.tapTimeout) return !0; if (this.cancelNextClick = !1, this.lastClickTime = a.timeStamp, g = this.trackingClickStart, this.trackingClick = !1, this.trackingClickStart = 0, f && (j = a.changedTouches[0], k = document.elementFromPoint(j.pageX - window.pageXOffset, j.pageY - window.pageYOffset) || k, k.fastClickScrollParent = this.targetElement.fastClickScrollParent), h = k.tagName.toLowerCase(), "label" === h) { if (b = this.findControl(k)) { if (this.focus(k), c) return !1; k = b } } else if (this.needsFocus(k)) return a.timeStamp - g > 100 || d && window.top !== window && "input" === h ? (this.targetElement = null, !1) : (this.focus(k), this.sendClick(k, a), d && "select" === h || (this.targetElement = null, a.preventDefault()), !1); return d && !e && (i = k.fastClickScrollParent, i && i.fastClickLastScrollTop !== i.scrollTop) ? !0 : (this.needsClick(k) || (a.preventDefault(), this.sendClick(k, a)), !1) }, a.prototype.onTouchCancel = function () { this.trackingClick = !1, this.targetElement = null }, a.prototype.onMouse = function (a) { return this.targetElement ? a.forwardedTouchEvent ? !0 : a.cancelable && (!this.needsClick(this.targetElement) || this.cancelNextClick) ? (a.stopImmediatePropagation ? a.stopImmediatePropagation() : a.propagationStopped = !0, a.stopPropagation(), a.preventDefault(), !1) : !0 : !0 }, a.prototype.onClick = function (a) { var b; return this.trackingClick ? (this.targetElement = null, this.trackingClick = !1, !0) : "submit" === a.target.type && 0 === a.detail ? !0 : (b = this.onMouse(a), b || (this.targetElement = null), b) }, a.prototype.destroy = function () { var a = this.layer; c && (a.removeEventListener("mouseover", this.onMouse, !0), a.removeEventListener("mousedown", this.onMouse, !0), a.removeEventListener("mouseup", this.onMouse, !0)), a.removeEventListener("click", this.onClick, !0), a.removeEventListener("touchstart", this.onTouchStart, !1), a.removeEventListener("touchmove", this.onTouchMove, !1), a.removeEventListener("touchend", this.onTouchEnd, !1), a.removeEventListener("touchcancel", this.onTouchCancel, !1) }, a.notNeeded = function (a) { var b, d, e, f; if ("undefined" == typeof window.ontouchstart) return !0; if (d = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]) { if (!c) return !0; if (b = document.querySelector("meta[name=viewport]")) { if (-1 !== b.content.indexOf("user-scalable=no")) return !0; if (d > 31 && document.documentElement.scrollWidth <= window.outerWidth) return !0 } } if (g && (e = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/), e[1] >= 10 && e[2] >= 3 && (b = document.querySelector("meta[name=viewport]")))) { if (-1 !== b.content.indexOf("user-scalable=no")) return !0; if (document.documentElement.scrollWidth <= window.outerWidth) return !0 } return "none" === a.style.msTouchAction || "manipulation" === a.style.touchAction ? !0 : (f = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1], f >= 27 && (b = document.querySelector("meta[name=viewport]"), b && (-1 !== b.content.indexOf("user-scalable=no") || document.documentElement.scrollWidth <= window.outerWidth)) ? !0 : "none" === a.style.touchAction || "manipulation" === a.style.touchAction ? !0 : !1) }, a.attach = function (b, c) { return new a(b, c) }, "function" == typeof define && "object" == typeof define.amd && define.amd ? define(function () { return a }) : "undefined" != typeof module && module.exports ? (module.exports = a.attach, module.exports.FastClick = a) : window.FastClick = a }();
// TinyColor v1.2.1
// https://github.com/bgrins/TinyColor
// 2015-08-13, Brian Grinstead, MIT License
!function () { function tinycolor(color, opts) { if (color = color ? color : "", opts = opts || {}, color instanceof tinycolor) return color; if (!(this instanceof tinycolor)) return new tinycolor(color, opts); var rgb = inputToRGB(color); this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format, this._gradientType = opts.gradientType, this._r < 1 && (this._r = mathRound(this._r)), this._g < 1 && (this._g = mathRound(this._g)), this._b < 1 && (this._b = mathRound(this._b)), this._ok = rgb.ok, this._tc_id = tinyCounter++ } function inputToRGB(color) { var rgb = { r: 0, g: 0, b: 0 }, a = 1, ok = !1, format = !1; return "string" == typeof color && (color = stringInputToObject(color)), "object" == typeof color && (color.hasOwnProperty("r") && color.hasOwnProperty("g") && color.hasOwnProperty("b") ? (rgb = rgbToRgb(color.r, color.g, color.b), ok = !0, format = "%" === String(color.r).substr(-1) ? "prgb" : "rgb") : color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("v") ? (color.s = convertToPercentage(color.s), color.v = convertToPercentage(color.v), rgb = hsvToRgb(color.h, color.s, color.v), ok = !0, format = "hsv") : color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("l") && (color.s = convertToPercentage(color.s), color.l = convertToPercentage(color.l), rgb = hslToRgb(color.h, color.s, color.l), ok = !0, format = "hsl"), color.hasOwnProperty("a") && (a = color.a)), a = boundAlpha(a), { ok: ok, format: color.format || format, r: mathMin(255, mathMax(rgb.r, 0)), g: mathMin(255, mathMax(rgb.g, 0)), b: mathMin(255, mathMax(rgb.b, 0)), a: a } } function rgbToRgb(r, g, b) { return { r: 255 * bound01(r, 255), g: 255 * bound01(g, 255), b: 255 * bound01(b, 255) } } function rgbToHsl(r, g, b) { r = bound01(r, 255), g = bound01(g, 255), b = bound01(b, 255); var h, s, max = mathMax(r, g, b), min = mathMin(r, g, b), l = (max + min) / 2; if (max == min) h = s = 0; else { var d = max - min; switch (s = l > .5 ? d / (2 - max - min) : d / (max + min), max) { case r: h = (g - b) / d + (b > g ? 6 : 0); break; case g: h = (b - r) / d + 2; break; case b: h = (r - g) / d + 4 } h /= 6 } return { h: h, s: s, l: l } } function hslToRgb(h, s, l) { function hue2rgb(p, q, t) { return 0 > t && (t += 1), t > 1 && (t -= 1), 1 / 6 > t ? p + 6 * (q - p) * t : .5 > t ? q : 2 / 3 > t ? p + 6 * (q - p) * (2 / 3 - t) : p } var r, g, b; if (h = bound01(h, 360), s = bound01(s, 100), l = bound01(l, 100), 0 === s) r = g = b = l; else { var q = .5 > l ? l * (1 + s) : l + s - l * s, p = 2 * l - q; r = hue2rgb(p, q, h + 1 / 3), g = hue2rgb(p, q, h), b = hue2rgb(p, q, h - 1 / 3) } return { r: 255 * r, g: 255 * g, b: 255 * b } } function rgbToHsv(r, g, b) { r = bound01(r, 255), g = bound01(g, 255), b = bound01(b, 255); var h, s, max = mathMax(r, g, b), min = mathMin(r, g, b), v = max, d = max - min; if (s = 0 === max ? 0 : d / max, max == min) h = 0; else { switch (max) { case r: h = (g - b) / d + (b > g ? 6 : 0); break; case g: h = (b - r) / d + 2; break; case b: h = (r - g) / d + 4 } h /= 6 } return { h: h, s: s, v: v } } function hsvToRgb(h, s, v) { h = 6 * bound01(h, 360), s = bound01(s, 100), v = bound01(v, 100); var i = math.floor(h), f = h - i, p = v * (1 - s), q = v * (1 - f * s), t = v * (1 - (1 - f) * s), mod = i % 6, r = [v, q, p, p, t, v][mod], g = [t, v, v, q, p, p][mod], b = [p, p, t, v, v, q][mod]; return { r: 255 * r, g: 255 * g, b: 255 * b } } function rgbToHex(r, g, b, allow3Char) { var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))]; return allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) ? hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) : hex.join("") } function rgbaToHex(r, g, b, a) { var hex = [pad2(convertDecimalToHex(a)), pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))]; return hex.join("") } function desaturate(color, amount) { amount = 0 === amount ? 0 : amount || 10; var hsl = tinycolor(color).toHsl(); return hsl.s -= amount / 100, hsl.s = clamp01(hsl.s), tinycolor(hsl) } function saturate(color, amount) { amount = 0 === amount ? 0 : amount || 10; var hsl = tinycolor(color).toHsl(); return hsl.s += amount / 100, hsl.s = clamp01(hsl.s), tinycolor(hsl) } function greyscale(color) { return tinycolor(color).desaturate(100) } function lighten(color, amount) { amount = 0 === amount ? 0 : amount || 10; var hsl = tinycolor(color).toHsl(); return hsl.l += amount / 100, hsl.l = clamp01(hsl.l), tinycolor(hsl) } function brighten(color, amount) { amount = 0 === amount ? 0 : amount || 10; var rgb = tinycolor(color).toRgb(); return rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100)))), rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100)))), rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100)))), tinycolor(rgb) } function darken(color, amount) { amount = 0 === amount ? 0 : amount || 10; var hsl = tinycolor(color).toHsl(); return hsl.l -= amount / 100, hsl.l = clamp01(hsl.l), tinycolor(hsl) } function spin(color, amount) { var hsl = tinycolor(color).toHsl(), hue = (mathRound(hsl.h) + amount) % 360; return hsl.h = 0 > hue ? 360 + hue : hue, tinycolor(hsl) } function complement(color) { var hsl = tinycolor(color).toHsl(); return hsl.h = (hsl.h + 180) % 360, tinycolor(hsl) } function triad(color) { var hsl = tinycolor(color).toHsl(), h = hsl.h; return [tinycolor(color), tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }), tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })] } function tetrad(color) { var hsl = tinycolor(color).toHsl(), h = hsl.h; return [tinycolor(color), tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }), tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }), tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })] } function splitcomplement(color) { var hsl = tinycolor(color).toHsl(), h = hsl.h; return [tinycolor(color), tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }), tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l })] } function analogous(color, results, slices) { results = results || 6, slices = slices || 30; var hsl = tinycolor(color).toHsl(), part = 360 / slices, ret = [tinycolor(color)]; for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) hsl.h = (hsl.h + part) % 360, ret.push(tinycolor(hsl)); return ret } function monochromatic(color, results) { results = results || 6; for (var hsv = tinycolor(color).toHsv(), h = hsv.h, s = hsv.s, v = hsv.v, ret = [], modification = 1 / results; results--;) ret.push(tinycolor({ h: h, s: s, v: v })), v = (v + modification) % 1; return ret } function flip(o) { var flipped = {}; for (var i in o) o.hasOwnProperty(i) && (flipped[o[i]] = i); return flipped } function boundAlpha(a) { return a = parseFloat(a), (isNaN(a) || 0 > a || a > 1) && (a = 1), a } function bound01(n, max) { isOnePointZero(n) && (n = "100%"); var processPercent = isPercentage(n); return n = mathMin(max, mathMax(0, parseFloat(n))), processPercent && (n = parseInt(n * max, 10) / 100), math.abs(n - max) < 1e-6 ? 1 : n % max / parseFloat(max) } function clamp01(val) { return mathMin(1, mathMax(0, val)) } function parseIntFromHex(val) { return parseInt(val, 16) } function isOnePointZero(n) { return "string" == typeof n && -1 != n.indexOf(".") && 1 === parseFloat(n) } function isPercentage(n) { return "string" == typeof n && -1 != n.indexOf("%") } function pad2(c) { return 1 == c.length ? "0" + c : "" + c } function convertToPercentage(n) { return 1 >= n && (n = 100 * n + "%"), n } function convertDecimalToHex(d) { return Math.round(255 * parseFloat(d)).toString(16) } function convertHexToDecimal(h) { return parseIntFromHex(h) / 255 } function stringInputToObject(color) { color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase(); var named = !1; if (names[color]) color = names[color], named = !0; else if ("transparent" == color) return { r: 0, g: 0, b: 0, a: 0, format: "name" }; var match; return (match = matchers.rgb.exec(color)) ? { r: match[1], g: match[2], b: match[3] } : (match = matchers.rgba.exec(color)) ? { r: match[1], g: match[2], b: match[3], a: match[4] } : (match = matchers.hsl.exec(color)) ? { h: match[1], s: match[2], l: match[3] } : (match = matchers.hsla.exec(color)) ? { h: match[1], s: match[2], l: match[3], a: match[4] } : (match = matchers.hsv.exec(color)) ? { h: match[1], s: match[2], v: match[3] } : (match = matchers.hsva.exec(color)) ? { h: match[1], s: match[2], v: match[3], a: match[4] } : (match = matchers.hex8.exec(color)) ? { a: convertHexToDecimal(match[1]), r: parseIntFromHex(match[2]), g: parseIntFromHex(match[3]), b: parseIntFromHex(match[4]), format: named ? "name" : "hex8" } : (match = matchers.hex6.exec(color)) ? { r: parseIntFromHex(match[1]), g: parseIntFromHex(match[2]), b: parseIntFromHex(match[3]), format: named ? "name" : "hex" } : (match = matchers.hex3.exec(color)) ? { r: parseIntFromHex(match[1] + "" + match[1]), g: parseIntFromHex(match[2] + "" + match[2]), b: parseIntFromHex(match[3] + "" + match[3]), format: named ? "name" : "hex" } : !1 } function validateWCAG2Parms(parms) { var level, size; return parms = parms || { level: "AA", size: "small" }, level = (parms.level || "AA").toUpperCase(), size = (parms.size || "small").toLowerCase(), "AA" !== level && "AAA" !== level && (level = "AA"), "small" !== size && "large" !== size && (size = "small"), { level: level, size: size } } var trimLeft = /^[\s,#]+/, trimRight = /\s+$/, tinyCounter = 0, math = Math, mathRound = math.round, mathMin = math.min, mathMax = math.max, mathRandom = math.random; tinycolor.prototype = { isDark: function () { return this.getBrightness() < 128 }, isLight: function () { return !this.isDark() }, isValid: function () { return this._ok }, getOriginalInput: function () { return this._originalInput }, getFormat: function () { return this._format }, getAlpha: function () { return this._a }, getBrightness: function () { var rgb = this.toRgb(); return (299 * rgb.r + 587 * rgb.g + 114 * rgb.b) / 1e3 }, getLuminance: function () { var RsRGB, GsRGB, BsRGB, R, G, B, rgb = this.toRgb(); return RsRGB = rgb.r / 255, GsRGB = rgb.g / 255, BsRGB = rgb.b / 255, R = .03928 >= RsRGB ? RsRGB / 12.92 : Math.pow((RsRGB + .055) / 1.055, 2.4), G = .03928 >= GsRGB ? GsRGB / 12.92 : Math.pow((GsRGB + .055) / 1.055, 2.4), B = .03928 >= BsRGB ? BsRGB / 12.92 : Math.pow((BsRGB + .055) / 1.055, 2.4), .2126 * R + .7152 * G + .0722 * B }, setAlpha: function (value) { return this._a = boundAlpha(value), this._roundA = mathRound(100 * this._a) / 100, this }, toHsv: function () { var hsv = rgbToHsv(this._r, this._g, this._b); return { h: 360 * hsv.h, s: hsv.s, v: hsv.v, a: this._a } }, toHsvString: function () { var hsv = rgbToHsv(this._r, this._g, this._b), h = mathRound(360 * hsv.h), s = mathRound(100 * hsv.s), v = mathRound(100 * hsv.v); return 1 == this._a ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")" }, toHsl: function () { var hsl = rgbToHsl(this._r, this._g, this._b); return { h: 360 * hsl.h, s: hsl.s, l: hsl.l, a: this._a } }, toHslString: function () { var hsl = rgbToHsl(this._r, this._g, this._b), h = mathRound(360 * hsl.h), s = mathRound(100 * hsl.s), l = mathRound(100 * hsl.l); return 1 == this._a ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")" }, toHex: function (allow3Char) { return rgbToHex(this._r, this._g, this._b, allow3Char) }, toHexString: function (allow3Char) { return "#" + this.toHex(allow3Char) }, toHex8: function () { return rgbaToHex(this._r, this._g, this._b, this._a) }, toHex8String: function () { return "#" + this.toHex8() }, toRgb: function () { return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a } }, toRgbString: function () { return 1 == this._a ? "rgb(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" : "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")" }, toPercentageRgb: function () { return { r: mathRound(100 * bound01(this._r, 255)) + "%", g: mathRound(100 * bound01(this._g, 255)) + "%", b: mathRound(100 * bound01(this._b, 255)) + "%", a: this._a } }, toPercentageRgbString: function () { return 1 == this._a ? "rgb(" + mathRound(100 * bound01(this._r, 255)) + "%, " + mathRound(100 * bound01(this._g, 255)) + "%, " + mathRound(100 * bound01(this._b, 255)) + "%)" : "rgba(" + mathRound(100 * bound01(this._r, 255)) + "%, " + mathRound(100 * bound01(this._g, 255)) + "%, " + mathRound(100 * bound01(this._b, 255)) + "%, " + this._roundA + ")" }, toName: function () { return 0 === this._a ? "transparent" : this._a < 1 ? !1 : hexNames[rgbToHex(this._r, this._g, this._b, !0)] || !1 }, toFilter: function (secondColor) { var hex8String = "#" + rgbaToHex(this._r, this._g, this._b, this._a), secondHex8String = hex8String, gradientType = this._gradientType ? "GradientType = 1, " : ""; if (secondColor) { var s = tinycolor(secondColor); secondHex8String = s.toHex8String() } return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")" }, toString: function (format) { var formatSet = !!format; format = format || this._format; var formattedString = !1, hasAlpha = this._a < 1 && this._a >= 0, needsAlphaFormat = !formatSet && hasAlpha && ("hex" === format || "hex6" === format || "hex3" === format || "name" === format); return needsAlphaFormat ? "name" === format && 0 === this._a ? this.toName() : this.toRgbString() : ("rgb" === format && (formattedString = this.toRgbString()), "prgb" === format && (formattedString = this.toPercentageRgbString()), ("hex" === format || "hex6" === format) && (formattedString = this.toHexString()), "hex3" === format && (formattedString = this.toHexString(!0)), "hex8" === format && (formattedString = this.toHex8String()), "name" === format && (formattedString = this.toName()), "hsl" === format && (formattedString = this.toHslString()), "hsv" === format && (formattedString = this.toHsvString()), formattedString || this.toHexString()) }, _applyModification: function (fn, args) { var color = fn.apply(null, [this].concat([].slice.call(args))); return this._r = color._r, this._g = color._g, this._b = color._b, this.setAlpha(color._a), this }, lighten: function () { return this._applyModification(lighten, arguments) }, brighten: function () { return this._applyModification(brighten, arguments) }, darken: function () { return this._applyModification(darken, arguments) }, desaturate: function () { return this._applyModification(desaturate, arguments) }, saturate: function () { return this._applyModification(saturate, arguments) }, greyscale: function () { return this._applyModification(greyscale, arguments) }, spin: function () { return this._applyModification(spin, arguments) }, _applyCombination: function (fn, args) { return fn.apply(null, [this].concat([].slice.call(args))) }, analogous: function () { return this._applyCombination(analogous, arguments) }, complement: function () { return this._applyCombination(complement, arguments) }, monochromatic: function () { return this._applyCombination(monochromatic, arguments) }, splitcomplement: function () { return this._applyCombination(splitcomplement, arguments) }, triad: function () { return this._applyCombination(triad, arguments) }, tetrad: function () { return this._applyCombination(tetrad, arguments) } }, tinycolor.fromRatio = function (color, opts) { if ("object" == typeof color) { var newColor = {}; for (var i in color) color.hasOwnProperty(i) && (newColor[i] = "a" === i ? color[i] : convertToPercentage(color[i])); color = newColor } return tinycolor(color, opts) }, tinycolor.equals = function (color1, color2) { return color1 && color2 ? tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString() : !1 }, tinycolor.random = function () { return tinycolor.fromRatio({ r: mathRandom(), g: mathRandom(), b: mathRandom() }) }, tinycolor.mix = function (color1, color2, amount) { amount = 0 === amount ? 0 : amount || 50; var w1, rgb1 = tinycolor(color1).toRgb(), rgb2 = tinycolor(color2).toRgb(), p = amount / 100, w = 2 * p - 1, a = rgb2.a - rgb1.a; w1 = -1 == w * a ? w : (w + a) / (1 + w * a), w1 = (w1 + 1) / 2; var w2 = 1 - w1, rgba = { r: rgb2.r * w1 + rgb1.r * w2, g: rgb2.g * w1 + rgb1.g * w2, b: rgb2.b * w1 + rgb1.b * w2, a: rgb2.a * p + rgb1.a * (1 - p) }; return tinycolor(rgba) }, tinycolor.readability = function (color1, color2) { var c1 = tinycolor(color1), c2 = tinycolor(color2); return (Math.max(c1.getLuminance(), c2.getLuminance()) + .05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + .05) }, tinycolor.isReadable = function (color1, color2, wcag2) { var wcag2Parms, out, readability = tinycolor.readability(color1, color2); switch (out = !1, wcag2Parms = validateWCAG2Parms(wcag2), wcag2Parms.level + wcag2Parms.size) { case "AAsmall": case "AAAlarge": out = readability >= 4.5; break; case "AAlarge": out = readability >= 3; break; case "AAAsmall": out = readability >= 7 } return out }, tinycolor.mostReadable = function (baseColor, colorList, args) { var readability, includeFallbackColors, level, size, bestColor = null, bestScore = 0; args = args || {}, includeFallbackColors = args.includeFallbackColors, level = args.level, size = args.size; for (var i = 0; i < colorList.length; i++) readability = tinycolor.readability(baseColor, colorList[i]), readability > bestScore && (bestScore = readability, bestColor = tinycolor(colorList[i])); return tinycolor.isReadable(baseColor, bestColor, { level: level, size: size }) || !includeFallbackColors ? bestColor : (args.includeFallbackColors = !1, tinycolor.mostReadable(baseColor, ["#fff", "#000"], args)) }; var names = tinycolor.names = { aliceblue: "f0f8ff", antiquewhite: "faebd7", aqua: "0ff", aquamarine: "7fffd4", azure: "f0ffff", beige: "f5f5dc", bisque: "ffe4c4", black: "000", blanchedalmond: "ffebcd", blue: "00f", blueviolet: "8a2be2", brown: "a52a2a", burlywood: "deb887", burntsienna: "ea7e5d", cadetblue: "5f9ea0", chartreuse: "7fff00", chocolate: "d2691e", coral: "ff7f50", cornflowerblue: "6495ed", cornsilk: "fff8dc", crimson: "dc143c", cyan: "0ff", darkblue: "00008b", darkcyan: "008b8b", darkgoldenrod: "b8860b", darkgray: "a9a9a9", darkgreen: "006400", darkgrey: "a9a9a9", darkkhaki: "bdb76b", darkmagenta: "8b008b", darkolivegreen: "556b2f", darkorange: "ff8c00", darkorchid: "9932cc", darkred: "8b0000", darksalmon: "e9967a", darkseagreen: "8fbc8f", darkslateblue: "483d8b", darkslategray: "2f4f4f", darkslategrey: "2f4f4f", darkturquoise: "00ced1", darkviolet: "9400d3", deeppink: "ff1493", deepskyblue: "00bfff", dimgray: "696969", dimgrey: "696969", dodgerblue: "1e90ff", firebrick: "b22222", floralwhite: "fffaf0", forestgreen: "228b22", fuchsia: "f0f", gainsboro: "dcdcdc", ghostwhite: "f8f8ff", gold: "ffd700", goldenrod: "daa520", gray: "808080", green: "008000", greenyellow: "adff2f", grey: "808080", honeydew: "f0fff0", hotpink: "ff69b4", indianred: "cd5c5c", indigo: "4b0082", ivory: "fffff0", khaki: "f0e68c", lavender: "e6e6fa", lavenderblush: "fff0f5", lawngreen: "7cfc00", lemonchiffon: "fffacd", lightblue: "add8e6", lightcoral: "f08080", lightcyan: "e0ffff", lightgoldenrodyellow: "fafad2", lightgray: "d3d3d3", lightgreen: "90ee90", lightgrey: "d3d3d3", lightpink: "ffb6c1", lightsalmon: "ffa07a", lightseagreen: "20b2aa", lightskyblue: "87cefa", lightslategray: "789", lightslategrey: "789", lightsteelblue: "b0c4de", lightyellow: "ffffe0", lime: "0f0", limegreen: "32cd32", linen: "faf0e6", magenta: "f0f", maroon: "800000", mediumaquamarine: "66cdaa", mediumblue: "0000cd", mediumorchid: "ba55d3", mediumpurple: "9370db", mediumseagreen: "3cb371", mediumslateblue: "7b68ee", mediumspringgreen: "00fa9a", mediumturquoise: "48d1cc", mediumvioletred: "c71585", midnightblue: "191970", mintcream: "f5fffa", mistyrose: "ffe4e1", moccasin: "ffe4b5", navajowhite: "ffdead", navy: "000080", oldlace: "fdf5e6", olive: "808000", olivedrab: "6b8e23", orange: "ffa500", orangered: "ff4500", orchid: "da70d6", palegoldenrod: "eee8aa", palegreen: "98fb98", paleturquoise: "afeeee", palevioletred: "db7093", papayawhip: "ffefd5", peachpuff: "ffdab9", peru: "cd853f", pink: "ffc0cb", plum: "dda0dd", powderblue: "b0e0e6", purple: "800080", rebeccapurple: "663399", red: "f00", rosybrown: "bc8f8f", royalblue: "4169e1", saddlebrown: "8b4513", salmon: "fa8072", sandybrown: "f4a460", seagreen: "2e8b57", seashell: "fff5ee", sienna: "a0522d", silver: "c0c0c0", skyblue: "87ceeb", slateblue: "6a5acd", slategray: "708090", slategrey: "708090", snow: "fffafa", springgreen: "00ff7f", steelblue: "4682b4", tan: "d2b48c", teal: "008080", thistle: "d8bfd8", tomato: "ff6347", turquoise: "40e0d0", violet: "ee82ee", wheat: "f5deb3", white: "fff", whitesmoke: "f5f5f5", yellow: "ff0", yellowgreen: "9acd32" }, hexNames = tinycolor.hexNames = flip(names), matchers = function () { var CSS_INTEGER = "[-\\+]?\\d+%?", CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?", CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")", PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?", PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?"; return { rgb: new RegExp("rgb" + PERMISSIVE_MATCH3), rgba: new RegExp("rgba" + PERMISSIVE_MATCH4), hsl: new RegExp("hsl" + PERMISSIVE_MATCH3), hsla: new RegExp("hsla" + PERMISSIVE_MATCH4), hsv: new RegExp("hsv" + PERMISSIVE_MATCH3), hsva: new RegExp("hsva" + PERMISSIVE_MATCH4), hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/, hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/ } }(); "undefined" != typeof module && module.exports ? module.exports = tinycolor : "function" == typeof define && define.amd ? define(function () { return tinycolor }) : window.tinycolor = tinycolor }();
(function (a) { if (typeof define === "function" && define.amd && define.amd.jQuery) { define(["jquery"], a) } else { a(jQuery) } }(function (f) { var y = "1.6.12", p = "left", o = "right", e = "up", x = "down", c = "in", A = "out", m = "none", s = "auto", l = "swipe", t = "pinch", B = "tap", j = "doubletap", b = "longtap", z = "hold", E = "horizontal", u = "vertical", i = "all", r = 10, g = "start", k = "move", h = "end", q = "cancel", a = "ontouchstart" in window, v = window.navigator.msPointerEnabled && !window.navigator.pointerEnabled, d = window.navigator.pointerEnabled || window.navigator.msPointerEnabled, C = "TouchSwipe"; var n = { fingers: 1, threshold: 75, cancelThreshold: null, pinchThreshold: 20, maxTimeThreshold: null, fingerReleaseThreshold: 250, longTapThreshold: 500, doubleTapThreshold: 200, swipe: null, swipeLeft: null, swipeRight: null, swipeUp: null, swipeDown: null, swipeStatus: null, pinchIn: null, pinchOut: null, pinchStatus: null, click: null, tap: null, doubleTap: null, longTap: null, hold: null, triggerOnTouchEnd: true, triggerOnTouchLeave: false, allowPageScroll: "auto", fallbackToMouseEvents: true, excludedElements: "label, button, input, select, textarea, a, .noSwipe", preventDefaultEvents: true }; f.fn.swipe = function (H) { var G = f(this), F = G.data(C); if (F && typeof H === "string") { if (F[H]) { return F[H].apply(this, Array.prototype.slice.call(arguments, 1)) } else { f.error("Method " + H + " does not exist on jQuery.swipe") } } else { if (F && typeof H === "object") { F.option.apply(this, arguments) } else { if (!F && (typeof H === "object" || !H)) { return w.apply(this, arguments) } } } return G }; f.fn.swipe.version = y; f.fn.swipe.defaults = n; f.fn.swipe.phases = { PHASE_START: g, PHASE_MOVE: k, PHASE_END: h, PHASE_CANCEL: q }; f.fn.swipe.directions = { LEFT: p, RIGHT: o, UP: e, DOWN: x, IN: c, OUT: A }; f.fn.swipe.pageScroll = { NONE: m, HORIZONTAL: E, VERTICAL: u, AUTO: s }; f.fn.swipe.fingers = { ONE: 1, TWO: 2, THREE: 3, FOUR: 4, FIVE: 5, ALL: i }; function w(F) { if (F && (F.allowPageScroll === undefined && (F.swipe !== undefined || F.swipeStatus !== undefined))) { F.allowPageScroll = m } if (F.click !== undefined && F.tap === undefined) { F.tap = F.click } if (!F) { F = {} } F = f.extend({}, f.fn.swipe.defaults, F); return this.each(function () { var H = f(this); var G = H.data(C); if (!G) { G = new D(this, F); H.data(C, G) } }) } function D(a4, au) { var au = f.extend({}, au); var az = (a || d || !au.fallbackToMouseEvents), K = az ? (d ? (v ? "MSPointerDown" : "pointerdown") : "touchstart") : "mousedown", ax = az ? (d ? (v ? "MSPointerMove" : "pointermove") : "touchmove") : "mousemove", V = az ? (d ? (v ? "MSPointerUp" : "pointerup") : "touchend") : "mouseup", T = az ? null : "mouseleave", aD = (d ? (v ? "MSPointerCancel" : "pointercancel") : "touchcancel"); var ag = 0, aP = null, ac = 0, a1 = 0, aZ = 0, H = 1, ap = 0, aJ = 0, N = null; var aR = f(a4); var aa = "start"; var X = 0; var aQ = {}; var U = 0, a2 = 0, a5 = 0, ay = 0, O = 0; var aW = null, af = null; try { aR.bind(K, aN); aR.bind(aD, a9) } catch (aj) { f.error("events not supported " + K + "," + aD + " on jQuery.swipe") } this.enable = function () { aR.bind(K, aN); aR.bind(aD, a9); return aR }; this.disable = function () { aK(); return aR }; this.destroy = function () { aK(); aR.data(C, null); aR = null }; this.option = function (bc, bb) { if (typeof bc === "object") { au = f.extend(au, bc) } else { if (au[bc] !== undefined) { if (bb === undefined) { return au[bc] } else { au[bc] = bb } } else { if (!bc) { return au } else { f.error("Option " + bc + " does not exist on jQuery.swipe.options") } } } return null }; function aN(bd) { if (aB()) { return } if (f(bd.target).closest(au.excludedElements, aR).length > 0) { return } var be = bd.originalEvent ? bd.originalEvent : bd; var bc, bf = be.touches, bb = bf ? bf[0] : be; aa = g; if (bf) { X = bf.length } else { if (au.preventDefaultEvents !== false) { bd.preventDefault() } } ag = 0; aP = null; aJ = null; ac = 0; a1 = 0; aZ = 0; H = 1; ap = 0; N = ab(); S(); ai(0, bb); if (!bf || (X === au.fingers || au.fingers === i) || aX()) { U = ar(); if (X == 2) { ai(1, bf[1]); a1 = aZ = at(aQ[0].start, aQ[1].start) } if (au.swipeStatus || au.pinchStatus) { bc = P(be, aa) } } else { bc = false } if (bc === false) { aa = q; P(be, aa); return bc } else { if (au.hold) { af = setTimeout(f.proxy(function () { aR.trigger("hold", [be.target]); if (au.hold) { bc = au.hold.call(aR, be, be.target) } }, this), au.longTapThreshold) } an(true) } return null } function a3(be) { var bh = be.originalEvent ? be.originalEvent : be; if (aa === h || aa === q || al()) { return } var bd, bi = bh.touches, bc = bi ? bi[0] : bh; var bf = aH(bc); a2 = ar(); if (bi) { X = bi.length } if (au.hold) { clearTimeout(af) } aa = k; if (X == 2) { if (a1 == 0) { ai(1, bi[1]); a1 = aZ = at(aQ[0].start, aQ[1].start) } else { aH(bi[1]); aZ = at(aQ[0].end, aQ[1].end); aJ = aq(aQ[0].end, aQ[1].end) } H = a7(a1, aZ); ap = Math.abs(a1 - aZ) } if ((X === au.fingers || au.fingers === i) || !bi || aX()) { aP = aL(bf.start, bf.end); ak(be, aP); ag = aS(bf.start, bf.end); ac = aM(); aI(aP, ag); if (au.swipeStatus || au.pinchStatus) { bd = P(bh, aa) } if (!au.triggerOnTouchEnd || au.triggerOnTouchLeave) { var bb = true; if (au.triggerOnTouchLeave) { var bg = aY(this); bb = F(bf.end, bg) } if (!au.triggerOnTouchEnd && bb) { aa = aC(k) } else { if (au.triggerOnTouchLeave && !bb) { aa = aC(h) } } if (aa == q || aa == h) { P(bh, aa) } } } else { aa = q; P(bh, aa) } if (bd === false) { aa = q; P(bh, aa) } } function M(bb) { var bc = bb.originalEvent ? bb.originalEvent : bb, bd = bc.touches; if (bd) { if (bd.length && !al()) { G(); return true } else { if (bd.length && al()) { return true } } } if (al()) { X = ay } a2 = ar(); ac = aM(); if (ba() || !am()) { aa = q; P(bc, aa) } else { if (au.triggerOnTouchEnd || (au.triggerOnTouchEnd == false && aa === k)) { if (au.preventDefaultEvents !== false) { bb.preventDefault() } aa = h; P(bc, aa) } else { if (!au.triggerOnTouchEnd && a6()) { aa = h; aF(bc, aa, B) } else { if (aa === k) { aa = q; P(bc, aa) } } } } an(false); return null } function a9() { X = 0; a2 = 0; U = 0; a1 = 0; aZ = 0; H = 1; S(); an(false) } function L(bb) { var bc = bb.originalEvent ? bb.originalEvent : bb; if (au.triggerOnTouchLeave) { aa = aC(h); P(bc, aa) } } function aK() { aR.unbind(K, aN); aR.unbind(aD, a9); aR.unbind(ax, a3); aR.unbind(V, M); if (T) { aR.unbind(T, L) } an(false) } function aC(bf) { var be = bf; var bd = aA(); var bc = am(); var bb = ba(); if (!bd || bb) { be = q } else { if (bc && bf == k && (!au.triggerOnTouchEnd || au.triggerOnTouchLeave)) { be = h } else { if (!bc && bf == h && au.triggerOnTouchLeave) { be = q } } } return be } function P(bd, bb) { var bc, be = bd.touches; if ((J() && W()) || (Q() && aX())) { if (J() && W()) { bc = aF(bd, bb, l) } if ((Q() && aX()) && bc !== false) { bc = aF(bd, bb, t) } } else { if (aG() && bc !== false) { bc = aF(bd, bb, j) } else { if (ao() && bc !== false) { bc = aF(bd, bb, b) } else { if (ah() && bc !== false) { bc = aF(bd, bb, B) } } } } if (bb === q) { if (W()) { bc = aF(bd, bb, l) } if (aX()) { bc = aF(bd, bb, t) } a9(bd) } if (bb === h) { if (be) { if (!be.length) { a9(bd) } } else { a9(bd) } } return bc } function aF(be, bb, bd) { var bc; if (bd == l) { aR.trigger("swipeStatus", [bb, aP || null, ag || 0, ac || 0, X, aQ]); if (au.swipeStatus) { bc = au.swipeStatus.call(aR, be, bb, aP || null, ag || 0, ac || 0, X, aQ); if (bc === false) { return false } } if (bb == h && aV()) { aR.trigger("swipe", [aP, ag, ac, X, aQ]); if (au.swipe) { bc = au.swipe.call(aR, be, aP, ag, ac, X, aQ); if (bc === false) { return false } } switch (aP) { case p: aR.trigger("swipeLeft", [aP, ag, ac, X, aQ]); if (au.swipeLeft) { bc = au.swipeLeft.call(aR, be, aP, ag, ac, X, aQ) } break; case o: aR.trigger("swipeRight", [aP, ag, ac, X, aQ]); if (au.swipeRight) { bc = au.swipeRight.call(aR, be, aP, ag, ac, X, aQ) } break; case e: aR.trigger("swipeUp", [aP, ag, ac, X, aQ]); if (au.swipeUp) { bc = au.swipeUp.call(aR, be, aP, ag, ac, X, aQ) } break; case x: aR.trigger("swipeDown", [aP, ag, ac, X, aQ]); if (au.swipeDown) { bc = au.swipeDown.call(aR, be, aP, ag, ac, X, aQ) } break } } } if (bd == t) { aR.trigger("pinchStatus", [bb, aJ || null, ap || 0, ac || 0, X, H, aQ]); if (au.pinchStatus) { bc = au.pinchStatus.call(aR, be, bb, aJ || null, ap || 0, ac || 0, X, H, aQ); if (bc === false) { return false } } if (bb == h && a8()) { switch (aJ) { case c: aR.trigger("pinchIn", [aJ || null, ap || 0, ac || 0, X, H, aQ]); if (au.pinchIn) { bc = au.pinchIn.call(aR, be, aJ || null, ap || 0, ac || 0, X, H, aQ) } break; case A: aR.trigger("pinchOut", [aJ || null, ap || 0, ac || 0, X, H, aQ]); if (au.pinchOut) { bc = au.pinchOut.call(aR, be, aJ || null, ap || 0, ac || 0, X, H, aQ) } break } } } if (bd == B) { if (bb === q || bb === h) { clearTimeout(aW); clearTimeout(af); if (Z() && !I()) { O = ar(); aW = setTimeout(f.proxy(function () { O = null; aR.trigger("tap", [be.target]); if (au.tap) { bc = au.tap.call(aR, be, be.target) } }, this), au.doubleTapThreshold) } else { O = null; aR.trigger("tap", [be.target]); if (au.tap) { bc = au.tap.call(aR, be, be.target) } } } } else { if (bd == j) { if (bb === q || bb === h) { clearTimeout(aW); O = null; aR.trigger("doubletap", [be.target]); if (au.doubleTap) { bc = au.doubleTap.call(aR, be, be.target) } } } else { if (bd == b) { if (bb === q || bb === h) { clearTimeout(aW); O = null; aR.trigger("longtap", [be.target]); if (au.longTap) { bc = au.longTap.call(aR, be, be.target) } } } } } return bc } function am() { var bb = true; if (au.threshold !== null) { bb = ag >= au.threshold } return bb } function ba() { var bb = false; if (au.cancelThreshold !== null && aP !== null) { bb = (aT(aP) - ag) >= au.cancelThreshold } return bb } function ae() { if (au.pinchThreshold !== null) { return ap >= au.pinchThreshold } return true } function aA() { var bb; if (au.maxTimeThreshold) { if (ac >= au.maxTimeThreshold) { bb = false } else { bb = true } } else { bb = true } return bb } function ak(bb, bc) { if (au.preventDefaultEvents === false) { return } if (au.allowPageScroll === m) { bb.preventDefault() } else { var bd = au.allowPageScroll === s; switch (bc) { case p: if ((au.swipeLeft && bd) || (!bd && au.allowPageScroll != E)) { bb.preventDefault() } break; case o: if ((au.swipeRight && bd) || (!bd && au.allowPageScroll != E)) { bb.preventDefault() } break; case e: if ((au.swipeUp && bd) || (!bd && au.allowPageScroll != u)) { bb.preventDefault() } break; case x: if ((au.swipeDown && bd) || (!bd && au.allowPageScroll != u)) { bb.preventDefault() } break } } } function a8() { var bc = aO(); var bb = Y(); var bd = ae(); return bc && bb && bd } function aX() { return !!(au.pinchStatus || au.pinchIn || au.pinchOut) } function Q() { return !!(a8() && aX()) } function aV() { var be = aA(); var bg = am(); var bd = aO(); var bb = Y(); var bc = ba(); var bf = !bc && bb && bd && bg && be; return bf } function W() { return !!(au.swipe || au.swipeStatus || au.swipeLeft || au.swipeRight || au.swipeUp || au.swipeDown) } function J() { return !!(aV() && W()) } function aO() { return ((X === au.fingers || au.fingers === i) || !a) } function Y() { return aQ[0].end.x !== 0 } function a6() { return !!(au.tap) } function Z() { return !!(au.doubleTap) } function aU() { return !!(au.longTap) } function R() { if (O == null) { return false } var bb = ar(); return (Z() && ((bb - O) <= au.doubleTapThreshold)) } function I() { return R() } function aw() { return ((X === 1 || !a) && (isNaN(ag) || ag < au.threshold)) } function a0() { return ((ac > au.longTapThreshold) && (ag < r)) } function ah() { return !!(aw() && a6()) } function aG() { return !!(R() && Z()) } function ao() { return !!(a0() && aU()) } function G() { a5 = ar(); ay = event.touches.length + 1 } function S() { a5 = 0; ay = 0 } function al() { var bb = false; if (a5) { var bc = ar() - a5; if (bc <= au.fingerReleaseThreshold) { bb = true } } return bb } function aB() { return !!(aR.data(C + "_intouch") === true) } function an(bb) { if (bb === true) { aR.bind(ax, a3); aR.bind(V, M); if (T) { aR.bind(T, L) } } else { aR.unbind(ax, a3, false); aR.unbind(V, M, false); if (T) { aR.unbind(T, L, false) } } aR.data(C + "_intouch", bb === true) } function ai(bd, bb) { var bc = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } }; bc.start.x = bc.end.x = bb.pageX || bb.clientX; bc.start.y = bc.end.y = bb.pageY || bb.clientY; aQ[bd] = bc; return bc } function aH(bb) { var bd = bb.identifier !== undefined ? bb.identifier : 0; var bc = ad(bd); if (bc === null) { bc = ai(bd, bb) } bc.end.x = bb.pageX || bb.clientX; bc.end.y = bb.pageY || bb.clientY; return bc } function ad(bb) { return aQ[bb] || null } function aI(bb, bc) { bc = Math.max(bc, aT(bb)); N[bb].distance = bc } function aT(bb) { if (N[bb]) { return N[bb].distance } return undefined } function ab() { var bb = {}; bb[p] = av(p); bb[o] = av(o); bb[e] = av(e); bb[x] = av(x); return bb } function av(bb) { return { direction: bb, distance: 0 } } function aM() { return a2 - U } function at(be, bd) { var bc = Math.abs(be.x - bd.x); var bb = Math.abs(be.y - bd.y); return Math.round(Math.sqrt(bc * bc + bb * bb)) } function a7(bb, bc) { var bd = (bc / bb) * 1; return bd.toFixed(2) } function aq() { if (H < 1) { return A } else { return c } } function aS(bc, bb) { return Math.round(Math.sqrt(Math.pow(bb.x - bc.x, 2) + Math.pow(bb.y - bc.y, 2))) } function aE(be, bc) { var bb = be.x - bc.x; var bg = bc.y - be.y; var bd = Math.atan2(bg, bb); var bf = Math.round(bd * 180 / Math.PI); if (bf < 0) { bf = 360 - Math.abs(bf) } return bf } function aL(bc, bb) { var bd = aE(bc, bb); if ((bd <= 45) && (bd >= 0)) { return p } else { if ((bd <= 360) && (bd >= 315)) { return p } else { if ((bd >= 135) && (bd <= 225)) { return o } else { if ((bd > 45) && (bd < 135)) { return x } else { return e } } } } } function ar() { var bb = new Date(); return bb.getTime() } function aY(bb) { bb = f(bb); var bd = bb.offset(); var bc = { left: bd.left, right: bd.left + bb.outerWidth(), top: bd.top, bottom: bd.top + bb.outerHeight() }; return bc } function F(bb, bc) { return (bb.x > bc.left && bb.x < bc.right && bb.y > bc.top && bb.y < bc.bottom) } } }));
/*!
 * jQuery bootstrap 3 breakpoint check
 * Check the current visibility of bootstrap 3 breakpoints
 *
 * @example `$.isXs()` function alias for `$.isBreakpoint("xs")`
 * @example `$.isSm()` function alias for `$.isBreakpoint("sm")`
 * @example `$.isMd()` function alias for `$.isBreakpoint("md")`
 * @example `$.isLg()` function alias for `$.isBreakpoint("lg")`
 * @version 1.0.0
 * @copyright Jens A. (cakebake) and other contributors
 * @license Released under the MIT license
 */
!function (a) { a.isBreakpoint = function (b) { var c, d; return c = a("<div/>", { "class": "visible-" + b }).appendTo("body"), d = c.is(":visible"), c.remove(), d }, a.extend(a, { isXs: function () { return a.isBreakpoint("xs") }, isSm: function () { return a.isBreakpoint("sm") }, isMd: function () { return a.isBreakpoint("md") }, isLg: function () { return a.isBreakpoint("lg") } }) }(jQuery);
(function ($) {

    $(document).ready(function () {
        App.init();

        // Pagers.
        $('select.pager.selector').change(function () {
            window.location = $(this).attr("disabled", true).val();
        });

        // Auto-bulk actions.
        $(".bulk-actions-auto select").change(function () {
            $(this).closest("form").find(".apply-bulk-actions-auto:first").click();
        });

        // RemoveUrl and UnsafeUrl.
        $("body").on("click", "[itemprop~='RemoveUrl']", function () {
            // Don't show the confirm dialog if the link is also UnsafeUrl, as it will already be handled in base.js.
            if ($(this).filter("[itemprop~='UnsafeUrl']").length === 1) {
                return false;
            }

            // Use a custom message if its set in data-message.
            var dataMessage = $(this).data('message');
            if (dataMessage === undefined) {
                dataMessage = $("[data-default-remove-confirmation-prompt]").data("default-remove-confirmation-prompt");
            }

            return confirm(dataMessage);
        });

        $(".check-all").change(function () {
            $("input[type=checkbox]:not(:disabled)").prop('checked', $(this).prop("checked"));
        });

        // Handle keypress events in bulk action fieldsets that are part of a single form.
        // This will make sure the expected action executes when pressing "enter" on a text field.
        $("form .bulk-actions").on("keypress", "input[type='text']", function (e) {
            if (e.which !== 13)
                return;

            var sender = $(this);
            var fieldset = sender.closest("fieldset.bulk-actions");
            var submitButton = fieldset.find("button[type='submit']");

            if (submitButton.length === 0)
                return;

            e.preventDefault();
            submitButton.click();
        });

        //more-actions
        function sortBy(prop) {
            return function (a, b) {
                var filter_a = parseInt($(a).attr(prop));
                var filter_b = parseInt($(b).attr(prop));
                if (isNaN(filter_a)) {
                    filter_a = -1;
                    return 1;
                }
                if (isNaN(filter_b)) {
                    filter_b = -1;
                    return -1;
                }
                //console.log(filter_a + ' > ' + filter_b);
                return filter_a > filter_b
                ? -1
                : (filter_a > filter_b ? 1 : 0);
            }
        }
        function sortDom(filter, elements) {
            //Transform our nodeList into array and apply sort function
            return [].map.call(elements, function (elm) {
                return elm;
            }).sort(sortBy(filter))
        }
        function last(array, n) {
            if (array == null)
                return void 0;
            if (n == null)
                return array[array.length - 1];
            return array.slice(Math.max(array.length - n, 0));
        };
        function init() {
            var links = $('.content-items-with-actions li > a');
            //sets the initial sort order
            $.each(links, function (i, el) {
                $(el).attr('data-id', 'action-' + i);
            });
        }
        init();

        function renderContentItemActions() {
            var container = $('.content-items-with-actions li');
            var containerWidth = $('.content-items').outerWidth(true);
            $.each(container, function (i, c) {
                var dropdownToggleWidth = 37;// getElementMinWidth();
                var mainActions = $(c).find('ul.main-actions');
                var moreactions = $(c).find('ul.more-actions');
                $.each(mainActions, function (i, el) {
                    var $el = $(el);
                    var loop = 1;
                    do {
                        var mainActionsWidth = dropdownToggleWidth;
                        var links = $el.find('li:first-child > a:visible');
                        $.each(links, function (i, a) {
                            mainActionsWidth += getElementMinWidth($(a));
                        });
                        if (mainActionsWidth >= containerWidth) {
                            var last = $(sortDom('priority', links)).last();
                            if (last.length > 0) {
                                var li = $('<li>');
                                li.append(last.clone())
                                moreactions.prepend(li);
                                last.hide();
                                mainActionsWidth -= getElementMinWidth(last);
                            }
                        } else {
                            var first = moreactions.find('li:first > a').first();
                            if (first.length > 0) {
                                var actionId = first.attr('data-id');
                                var mainAction = mainActions
                                    .find('li a[data-id="' + actionId + '"]');
                                mainAction.show()
                                first.parent('li').remove();
                                mainActionsWidth += getElementMinWidth(mainAction);
                            }
                        }
                        //var mainActionsWidth = dropdownToggleWidth;
                        //var links = $el.find('li:first-child > a:visible');
                        //$.each(links, function (i, a) {
                        //    mainActionsWidth += getElementMinWidth($(a));
                        //});
                        loop++;
                    } while (loop < 20 && mainActionsWidth > containerWidth)//(mainActionsWidth > containerWidth)
                });

                $.each(moreactions, function (i, el) {
                    var $el = $(el);
                    if ($el.find('li').length > 0) {
                        $(c).find('.more-actions-dropdown').show();
                    }
                    else {
                        $(c).find('.more-actions-dropdown').hide();
                    }
                });
            });
        }

        function getElementMinWidth(el) {
            var props = { position: "absolute", visibility: "hidden", display: "inline-block" };
            var itemWidth = 0;
            if (el != undefined) {
                $.swap(el[0], props, function () {
                    itemWidth = el.outerWidth();
                });
            }
            return itemWidth;
        }
        var id;
        var startWidth = window.innerWidth; //get the original screen width

        renderContentItemActions();
        $(window).resize(function () {
            clearTimeout(id);
            id = setTimeout(doneResizing, 200);
        });
        function doneResizing() {
            renderContentItemActions();
        }

        // Bulk edit bootstrap dropdown button actions

        // Verify if object exist
        jQuery.fn.exists = function () { return this.length > 0; }

        $("#dataConfirmOK").on("click", function () {
            var _this = $(this);
            var hrefParts = _this.attr("href").split("?");

            //for single action
            if ($('#publishActions').val() == 'None') {
                var magicToken = $("input[name=__RequestVerificationToken]").first();
                if (!magicToken) { return; } // no sense in continuing if form POSTS will fail


                var form = $("<form action=\"" + hrefParts[0] + "\" method=\"POST\" />");
                form.append(magicToken.clone());
                if (hrefParts.length > 1) {
                    var queryParts = hrefParts[1].split("&");
                    for (var i = 0; i < queryParts.length; i++) {
                        var queryPartKVP = queryParts[i].split("=");
                        //trusting hrefs in the page here
                        form.append($("<input type=\"hidden\" name=\"" + decodeURIComponent(queryPartKVP[0]) + "\" value=\"" + decodeURIComponent(queryPartKVP[1]) + "\" />"));
                    }
                }
                form.css({ "position": "absolute", "left": "-9999em" });
                $("body").append(form);

                var unsafeUrlPrompt = _this.data("unsafe-url");

                if (unsafeUrlPrompt && unsafeUrlPrompt.length > 0) {
                    if (!confirm(unsafeUrlPrompt)) {
                        return false;
                    }
                }

                if (_this.filter("[itemprop~='RemoveUrl']").length == 1) {
                    // use a custom message if its set in data-message
                    var dataMessage = _this.data('message');
                    if (dataMessage === undefined) {
                        dataMessage = confirmRemoveMessage;
                    }

                    if (!confirm(dataMessage)) {
                        return false;
                    }
                }

                form.submit();
                return false;
            }
            else {
                //for bulk actions
                submitForm($('#publishActions').val());
            }
        });

        //Bootstrap modal confirm
        $('[data-confirm]').click(function (ev) {
            var href = $(this).attr('href');
            $('#publishActions').val('None');

            $('#dataConfirmModal').find('.modal-body').text($(this).attr('data-confirm'));
            $('#dataConfirmOK').attr('href', href);
            $('#dataConfirmModal').modal({ show: true });

            return false;
        });

        $('[data-action]').click(function (ev) {
            var action = $(this).attr("data-action");
            $('#publishActions').val(action);

            var href = $(this).attr('href');
            $('#dataConfirmModal').find('.modal-body').text($(this).attr('data-confirm'));
            $('#dataConfirmOK').attr('href', href);
            $('#dataConfirmModal').modal({ show: true });

            return false;
        });

        function submitForm(action) {
            //verify the use of one name or the other
            //TODO standardize name in all views
            if ($('button[name="submit.BulkEdit"]').exists()) {
                var button = $('button[name="submit.BulkEdit"]').click();
            }
            else if ($('button[name="submit.BulkExecute"]').exists()) {
                var button = $('button[name="submit.BulkExecute"]').click();
            }
        }
        // End Bulk edit bootstrap dropdown button actions

    });
})(jQuery);
(function (a) { if (typeof define === "function" && define.amd && define.amd.jQuery) { define(["jquery"], a) } else { a(jQuery) } }(function (f) { var y = "1.6.12", p = "left", o = "right", e = "up", x = "down", c = "in", A = "out", m = "none", s = "auto", l = "swipe", t = "pinch", B = "tap", j = "doubletap", b = "longtap", z = "hold", E = "horizontal", u = "vertical", i = "all", r = 10, g = "start", k = "move", h = "end", q = "cancel", a = "ontouchstart" in window, v = window.navigator.msPointerEnabled && !window.navigator.pointerEnabled, d = window.navigator.pointerEnabled || window.navigator.msPointerEnabled, C = "TouchSwipe"; var n = { fingers: 1, threshold: 75, cancelThreshold: null, pinchThreshold: 20, maxTimeThreshold: null, fingerReleaseThreshold: 250, longTapThreshold: 500, doubleTapThreshold: 200, swipe: null, swipeLeft: null, swipeRight: null, swipeUp: null, swipeDown: null, swipeStatus: null, pinchIn: null, pinchOut: null, pinchStatus: null, click: null, tap: null, doubleTap: null, longTap: null, hold: null, triggerOnTouchEnd: true, triggerOnTouchLeave: false, allowPageScroll: "auto", fallbackToMouseEvents: true, excludedElements: "label, button, input, select, textarea, a, .noSwipe", preventDefaultEvents: true }; f.fn.swipe = function (H) { var G = f(this), F = G.data(C); if (F && typeof H === "string") { if (F[H]) { return F[H].apply(this, Array.prototype.slice.call(arguments, 1)) } else { f.error("Method " + H + " does not exist on jQuery.swipe") } } else { if (F && typeof H === "object") { F.option.apply(this, arguments) } else { if (!F && (typeof H === "object" || !H)) { return w.apply(this, arguments) } } } return G }; f.fn.swipe.version = y; f.fn.swipe.defaults = n; f.fn.swipe.phases = { PHASE_START: g, PHASE_MOVE: k, PHASE_END: h, PHASE_CANCEL: q }; f.fn.swipe.directions = { LEFT: p, RIGHT: o, UP: e, DOWN: x, IN: c, OUT: A }; f.fn.swipe.pageScroll = { NONE: m, HORIZONTAL: E, VERTICAL: u, AUTO: s }; f.fn.swipe.fingers = { ONE: 1, TWO: 2, THREE: 3, FOUR: 4, FIVE: 5, ALL: i }; function w(F) { if (F && (F.allowPageScroll === undefined && (F.swipe !== undefined || F.swipeStatus !== undefined))) { F.allowPageScroll = m } if (F.click !== undefined && F.tap === undefined) { F.tap = F.click } if (!F) { F = {} } F = f.extend({}, f.fn.swipe.defaults, F); return this.each(function () { var H = f(this); var G = H.data(C); if (!G) { G = new D(this, F); H.data(C, G) } }) } function D(a4, au) { var au = f.extend({}, au); var az = (a || d || !au.fallbackToMouseEvents), K = az ? (d ? (v ? "MSPointerDown" : "pointerdown") : "touchstart") : "mousedown", ax = az ? (d ? (v ? "MSPointerMove" : "pointermove") : "touchmove") : "mousemove", V = az ? (d ? (v ? "MSPointerUp" : "pointerup") : "touchend") : "mouseup", T = az ? null : "mouseleave", aD = (d ? (v ? "MSPointerCancel" : "pointercancel") : "touchcancel"); var ag = 0, aP = null, ac = 0, a1 = 0, aZ = 0, H = 1, ap = 0, aJ = 0, N = null; var aR = f(a4); var aa = "start"; var X = 0; var aQ = {}; var U = 0, a2 = 0, a5 = 0, ay = 0, O = 0; var aW = null, af = null; try { aR.bind(K, aN); aR.bind(aD, a9) } catch (aj) { f.error("events not supported " + K + "," + aD + " on jQuery.swipe") } this.enable = function () { aR.bind(K, aN); aR.bind(aD, a9); return aR }; this.disable = function () { aK(); return aR }; this.destroy = function () { aK(); aR.data(C, null); aR = null }; this.option = function (bc, bb) { if (typeof bc === "object") { au = f.extend(au, bc) } else { if (au[bc] !== undefined) { if (bb === undefined) { return au[bc] } else { au[bc] = bb } } else { if (!bc) { return au } else { f.error("Option " + bc + " does not exist on jQuery.swipe.options") } } } return null }; function aN(bd) { if (aB()) { return } if (f(bd.target).closest(au.excludedElements, aR).length > 0) { return } var be = bd.originalEvent ? bd.originalEvent : bd; var bc, bf = be.touches, bb = bf ? bf[0] : be; aa = g; if (bf) { X = bf.length } else { if (au.preventDefaultEvents !== false) { bd.preventDefault() } } ag = 0; aP = null; aJ = null; ac = 0; a1 = 0; aZ = 0; H = 1; ap = 0; N = ab(); S(); ai(0, bb); if (!bf || (X === au.fingers || au.fingers === i) || aX()) { U = ar(); if (X == 2) { ai(1, bf[1]); a1 = aZ = at(aQ[0].start, aQ[1].start) } if (au.swipeStatus || au.pinchStatus) { bc = P(be, aa) } } else { bc = false } if (bc === false) { aa = q; P(be, aa); return bc } else { if (au.hold) { af = setTimeout(f.proxy(function () { aR.trigger("hold", [be.target]); if (au.hold) { bc = au.hold.call(aR, be, be.target) } }, this), au.longTapThreshold) } an(true) } return null } function a3(be) { var bh = be.originalEvent ? be.originalEvent : be; if (aa === h || aa === q || al()) { return } var bd, bi = bh.touches, bc = bi ? bi[0] : bh; var bf = aH(bc); a2 = ar(); if (bi) { X = bi.length } if (au.hold) { clearTimeout(af) } aa = k; if (X == 2) { if (a1 == 0) { ai(1, bi[1]); a1 = aZ = at(aQ[0].start, aQ[1].start) } else { aH(bi[1]); aZ = at(aQ[0].end, aQ[1].end); aJ = aq(aQ[0].end, aQ[1].end) } H = a7(a1, aZ); ap = Math.abs(a1 - aZ) } if ((X === au.fingers || au.fingers === i) || !bi || aX()) { aP = aL(bf.start, bf.end); ak(be, aP); ag = aS(bf.start, bf.end); ac = aM(); aI(aP, ag); if (au.swipeStatus || au.pinchStatus) { bd = P(bh, aa) } if (!au.triggerOnTouchEnd || au.triggerOnTouchLeave) { var bb = true; if (au.triggerOnTouchLeave) { var bg = aY(this); bb = F(bf.end, bg) } if (!au.triggerOnTouchEnd && bb) { aa = aC(k) } else { if (au.triggerOnTouchLeave && !bb) { aa = aC(h) } } if (aa == q || aa == h) { P(bh, aa) } } } else { aa = q; P(bh, aa) } if (bd === false) { aa = q; P(bh, aa) } } function M(bb) { var bc = bb.originalEvent ? bb.originalEvent : bb, bd = bc.touches; if (bd) { if (bd.length && !al()) { G(); return true } else { if (bd.length && al()) { return true } } } if (al()) { X = ay } a2 = ar(); ac = aM(); if (ba() || !am()) { aa = q; P(bc, aa) } else { if (au.triggerOnTouchEnd || (au.triggerOnTouchEnd == false && aa === k)) { if (au.preventDefaultEvents !== false) { bb.preventDefault() } aa = h; P(bc, aa) } else { if (!au.triggerOnTouchEnd && a6()) { aa = h; aF(bc, aa, B) } else { if (aa === k) { aa = q; P(bc, aa) } } } } an(false); return null } function a9() { X = 0; a2 = 0; U = 0; a1 = 0; aZ = 0; H = 1; S(); an(false) } function L(bb) { var bc = bb.originalEvent ? bb.originalEvent : bb; if (au.triggerOnTouchLeave) { aa = aC(h); P(bc, aa) } } function aK() { aR.unbind(K, aN); aR.unbind(aD, a9); aR.unbind(ax, a3); aR.unbind(V, M); if (T) { aR.unbind(T, L) } an(false) } function aC(bf) { var be = bf; var bd = aA(); var bc = am(); var bb = ba(); if (!bd || bb) { be = q } else { if (bc && bf == k && (!au.triggerOnTouchEnd || au.triggerOnTouchLeave)) { be = h } else { if (!bc && bf == h && au.triggerOnTouchLeave) { be = q } } } return be } function P(bd, bb) { var bc, be = bd.touches; if ((J() && W()) || (Q() && aX())) { if (J() && W()) { bc = aF(bd, bb, l) } if ((Q() && aX()) && bc !== false) { bc = aF(bd, bb, t) } } else { if (aG() && bc !== false) { bc = aF(bd, bb, j) } else { if (ao() && bc !== false) { bc = aF(bd, bb, b) } else { if (ah() && bc !== false) { bc = aF(bd, bb, B) } } } } if (bb === q) { if (W()) { bc = aF(bd, bb, l) } if (aX()) { bc = aF(bd, bb, t) } a9(bd) } if (bb === h) { if (be) { if (!be.length) { a9(bd) } } else { a9(bd) } } return bc } function aF(be, bb, bd) { var bc; if (bd == l) { aR.trigger("swipeStatus", [bb, aP || null, ag || 0, ac || 0, X, aQ]); if (au.swipeStatus) { bc = au.swipeStatus.call(aR, be, bb, aP || null, ag || 0, ac || 0, X, aQ); if (bc === false) { return false } } if (bb == h && aV()) { aR.trigger("swipe", [aP, ag, ac, X, aQ]); if (au.swipe) { bc = au.swipe.call(aR, be, aP, ag, ac, X, aQ); if (bc === false) { return false } } switch (aP) { case p: aR.trigger("swipeLeft", [aP, ag, ac, X, aQ]); if (au.swipeLeft) { bc = au.swipeLeft.call(aR, be, aP, ag, ac, X, aQ) } break; case o: aR.trigger("swipeRight", [aP, ag, ac, X, aQ]); if (au.swipeRight) { bc = au.swipeRight.call(aR, be, aP, ag, ac, X, aQ) } break; case e: aR.trigger("swipeUp", [aP, ag, ac, X, aQ]); if (au.swipeUp) { bc = au.swipeUp.call(aR, be, aP, ag, ac, X, aQ) } break; case x: aR.trigger("swipeDown", [aP, ag, ac, X, aQ]); if (au.swipeDown) { bc = au.swipeDown.call(aR, be, aP, ag, ac, X, aQ) } break } } } if (bd == t) { aR.trigger("pinchStatus", [bb, aJ || null, ap || 0, ac || 0, X, H, aQ]); if (au.pinchStatus) { bc = au.pinchStatus.call(aR, be, bb, aJ || null, ap || 0, ac || 0, X, H, aQ); if (bc === false) { return false } } if (bb == h && a8()) { switch (aJ) { case c: aR.trigger("pinchIn", [aJ || null, ap || 0, ac || 0, X, H, aQ]); if (au.pinchIn) { bc = au.pinchIn.call(aR, be, aJ || null, ap || 0, ac || 0, X, H, aQ) } break; case A: aR.trigger("pinchOut", [aJ || null, ap || 0, ac || 0, X, H, aQ]); if (au.pinchOut) { bc = au.pinchOut.call(aR, be, aJ || null, ap || 0, ac || 0, X, H, aQ) } break } } } if (bd == B) { if (bb === q || bb === h) { clearTimeout(aW); clearTimeout(af); if (Z() && !I()) { O = ar(); aW = setTimeout(f.proxy(function () { O = null; aR.trigger("tap", [be.target]); if (au.tap) { bc = au.tap.call(aR, be, be.target) } }, this), au.doubleTapThreshold) } else { O = null; aR.trigger("tap", [be.target]); if (au.tap) { bc = au.tap.call(aR, be, be.target) } } } } else { if (bd == j) { if (bb === q || bb === h) { clearTimeout(aW); O = null; aR.trigger("doubletap", [be.target]); if (au.doubleTap) { bc = au.doubleTap.call(aR, be, be.target) } } } else { if (bd == b) { if (bb === q || bb === h) { clearTimeout(aW); O = null; aR.trigger("longtap", [be.target]); if (au.longTap) { bc = au.longTap.call(aR, be, be.target) } } } } } return bc } function am() { var bb = true; if (au.threshold !== null) { bb = ag >= au.threshold } return bb } function ba() { var bb = false; if (au.cancelThreshold !== null && aP !== null) { bb = (aT(aP) - ag) >= au.cancelThreshold } return bb } function ae() { if (au.pinchThreshold !== null) { return ap >= au.pinchThreshold } return true } function aA() { var bb; if (au.maxTimeThreshold) { if (ac >= au.maxTimeThreshold) { bb = false } else { bb = true } } else { bb = true } return bb } function ak(bb, bc) { if (au.preventDefaultEvents === false) { return } if (au.allowPageScroll === m) { bb.preventDefault() } else { var bd = au.allowPageScroll === s; switch (bc) { case p: if ((au.swipeLeft && bd) || (!bd && au.allowPageScroll != E)) { bb.preventDefault() } break; case o: if ((au.swipeRight && bd) || (!bd && au.allowPageScroll != E)) { bb.preventDefault() } break; case e: if ((au.swipeUp && bd) || (!bd && au.allowPageScroll != u)) { bb.preventDefault() } break; case x: if ((au.swipeDown && bd) || (!bd && au.allowPageScroll != u)) { bb.preventDefault() } break } } } function a8() { var bc = aO(); var bb = Y(); var bd = ae(); return bc && bb && bd } function aX() { return !!(au.pinchStatus || au.pinchIn || au.pinchOut) } function Q() { return !!(a8() && aX()) } function aV() { var be = aA(); var bg = am(); var bd = aO(); var bb = Y(); var bc = ba(); var bf = !bc && bb && bd && bg && be; return bf } function W() { return !!(au.swipe || au.swipeStatus || au.swipeLeft || au.swipeRight || au.swipeUp || au.swipeDown) } function J() { return !!(aV() && W()) } function aO() { return ((X === au.fingers || au.fingers === i) || !a) } function Y() { return aQ[0].end.x !== 0 } function a6() { return !!(au.tap) } function Z() { return !!(au.doubleTap) } function aU() { return !!(au.longTap) } function R() { if (O == null) { return false } var bb = ar(); return (Z() && ((bb - O) <= au.doubleTapThreshold)) } function I() { return R() } function aw() { return ((X === 1 || !a) && (isNaN(ag) || ag < au.threshold)) } function a0() { return ((ac > au.longTapThreshold) && (ag < r)) } function ah() { return !!(aw() && a6()) } function aG() { return !!(R() && Z()) } function ao() { return !!(a0() && aU()) } function G() { a5 = ar(); ay = event.touches.length + 1 } function S() { a5 = 0; ay = 0 } function al() { var bb = false; if (a5) { var bc = ar() - a5; if (bc <= au.fingerReleaseThreshold) { bb = true } } return bb } function aB() { return !!(aR.data(C + "_intouch") === true) } function an(bb) { if (bb === true) { aR.bind(ax, a3); aR.bind(V, M); if (T) { aR.bind(T, L) } } else { aR.unbind(ax, a3, false); aR.unbind(V, M, false); if (T) { aR.unbind(T, L, false) } } aR.data(C + "_intouch", bb === true) } function ai(bd, bb) { var bc = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } }; bc.start.x = bc.end.x = bb.pageX || bb.clientX; bc.start.y = bc.end.y = bb.pageY || bb.clientY; aQ[bd] = bc; return bc } function aH(bb) { var bd = bb.identifier !== undefined ? bb.identifier : 0; var bc = ad(bd); if (bc === null) { bc = ai(bd, bb) } bc.end.x = bb.pageX || bb.clientX; bc.end.y = bb.pageY || bb.clientY; return bc } function ad(bb) { return aQ[bb] || null } function aI(bb, bc) { bc = Math.max(bc, aT(bb)); N[bb].distance = bc } function aT(bb) { if (N[bb]) { return N[bb].distance } return undefined } function ab() { var bb = {}; bb[p] = av(p); bb[o] = av(o); bb[e] = av(e); bb[x] = av(x); return bb } function av(bb) { return { direction: bb, distance: 0 } } function aM() { return a2 - U } function at(be, bd) { var bc = Math.abs(be.x - bd.x); var bb = Math.abs(be.y - bd.y); return Math.round(Math.sqrt(bc * bc + bb * bb)) } function a7(bb, bc) { var bd = (bc / bb) * 1; return bd.toFixed(2) } function aq() { if (H < 1) { return A } else { return c } } function aS(bc, bb) { return Math.round(Math.sqrt(Math.pow(bb.x - bc.x, 2) + Math.pow(bb.y - bc.y, 2))) } function aE(be, bc) { var bb = be.x - bc.x; var bg = bc.y - be.y; var bd = Math.atan2(bg, bb); var bf = Math.round(bd * 180 / Math.PI); if (bf < 0) { bf = 360 - Math.abs(bf) } return bf } function aL(bc, bb) { var bd = aE(bc, bb); if ((bd <= 45) && (bd >= 0)) { return p } else { if ((bd <= 360) && (bd >= 315)) { return p } else { if ((bd >= 135) && (bd <= 225)) { return o } else { if ((bd > 45) && (bd < 135)) { return x } else { return e } } } } } function ar() { var bb = new Date(); return bb.getTime() } function aY(bb) { bb = f(bb); var bd = bb.offset(); var bc = { left: bd.left, right: bd.left + bb.outerWidth(), top: bd.top, bottom: bd.top + bb.outerHeight() }; return bc } function F(bb, bc) { return (bb.x > bc.left && bb.x < bc.right && bb.y > bc.top && bb.y < bc.bottom) } } }));
//Colorbox
!function (t, e, i) { function n(i, n, o) { var r = e.createElement(i); return n && (r.id = Z + n), o && (r.style.cssText = o), t(r) } function o() { return i.innerHeight ? i.innerHeight : t(i).height() } function r(e, i) { i !== Object(i) && (i = {}), this.cache = {}, this.el = e, this.value = function (e) { var n; return void 0 === this.cache[e] && (n = t(this.el).attr("data-cbox-" + e), void 0 !== n ? this.cache[e] = n : void 0 !== i[e] ? this.cache[e] = i[e] : void 0 !== X[e] && (this.cache[e] = X[e])), this.cache[e] }, this.get = function (e) { var i = this.value(e); return t.isFunction(i) ? i.call(this.el, this) : i } } function h(t) { var e = W.length, i = (A + t) % e; return 0 > i ? e + i : i } function a(t, e) { return Math.round((/%/.test(t) ? ("x" === e ? E.width() : o()) / 100 : 1) * parseInt(t, 10)) } function s(t, e) { return t.get("photo") || t.get("photoRegex").test(e) } function l(t, e) { return t.get("retinaUrl") && i.devicePixelRatio > 1 ? e.replace(t.get("photoRegex"), t.get("retinaSuffix")) : e } function d(t) { "contains" in x[0] && !x[0].contains(t.target) && t.target !== v[0] && (t.stopPropagation(), x.focus()) } function c(t) { c.str !== t && (x.add(v).removeClass(c.str).addClass(t), c.str = t) } function g(e) { A = 0, e && e !== !1 && "nofollow" !== e ? (W = t("." + tt).filter(function () { var i = t.data(this, Y), n = new r(this, i); return n.get("rel") === e }), A = W.index(_.el), -1 === A && (W = W.add(_.el), A = W.length - 1)) : W = t(_.el) } function u(i) { t(e).trigger(i), at.triggerHandler(i) } function f(i) { var o; if (!G) { if (o = t(i).data(Y), _ = new r(i, o), g(_.get("rel")), !$) { $ = q = !0, c(_.get("className")), x.css({ visibility: "hidden", display: "block", opacity: "" }), I = n(st, "LoadedContent", "width:0; height:0; overflow:hidden; visibility:hidden"), b.css({ width: "", height: "" }).append(I), j = T.height() + k.height() + b.outerHeight(!0) - b.height(), D = C.width() + H.width() + b.outerWidth(!0) - b.width(), N = I.outerHeight(!0), z = I.outerWidth(!0); var h = a(_.get("initialWidth"), "x"), s = a(_.get("initialHeight"), "y"), l = _.get("maxWidth"), f = _.get("maxHeight"); _.w = Math.max((l !== !1 ? Math.min(h, a(l, "x")) : h) - z - D, 0), _.h = Math.max((f !== !1 ? Math.min(s, a(f, "y")) : s) - N - j, 0), I.css({ width: "", height: _.h }), J.position(), u(et), _.get("onOpen"), O.add(F).hide(), x.focus(), _.get("trapFocus") && e.addEventListener && (e.addEventListener("focus", d, !0), at.one(rt, function () { e.removeEventListener("focus", d, !0) })), _.get("returnFocus") && at.one(rt, function () { t(_.el).focus() }) } var p = parseFloat(_.get("opacity")); v.css({ opacity: p === p ? p : "", cursor: _.get("overlayClose") ? "pointer" : "", visibility: "visible" }).show(), _.get("closeButton") ? B.html(_.get("close")).appendTo(b) : B.appendTo("<div/>"), w() } } function p() { x || (V = !1, E = t(i), x = n(st).attr({ id: Y, "class": t.support.opacity === !1 ? Z + "IE" : "", role: "dialog", tabindex: "-1" }).hide(), v = n(st, "Overlay").hide(), L = t([n(st, "LoadingOverlay")[0], n(st, "LoadingGraphic")[0]]), y = n(st, "Wrapper"), b = n(st, "Content").append(F = n(st, "Title"), R = n(st, "Current"), P = t('<button type="button"/>').attr({ id: Z + "Previous" }), K = t('<button type="button"/>').attr({ id: Z + "Next" }), S = n("button", "Slideshow"), L), B = t('<button type="button"/>').attr({ id: Z + "Close" }), y.append(n(st).append(n(st, "TopLeft"), T = n(st, "TopCenter"), n(st, "TopRight")), n(st, !1, "clear:left").append(C = n(st, "MiddleLeft"), b, H = n(st, "MiddleRight")), n(st, !1, "clear:left").append(n(st, "BottomLeft"), k = n(st, "BottomCenter"), n(st, "BottomRight"))).find("div div").css({ "float": "left" }), M = n(st, !1, "position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;"), O = K.add(P).add(R).add(S)), e.body && !x.parent().length && t(e.body).append(v, x.append(y, M)) } function m() { function i(t) { t.which > 1 || t.shiftKey || t.altKey || t.metaKey || t.ctrlKey || (t.preventDefault(), f(this)) } return x ? (V || (V = !0, K.click(function () { J.next() }), P.click(function () { J.prev() }), B.click(function () { J.close() }), v.click(function () { _.get("overlayClose") && J.close() }), t(e).bind("keydown." + Z, function (t) { var e = t.keyCode; $ && _.get("escKey") && 27 === e && (t.preventDefault(), J.close()), $ && _.get("arrowKey") && W[1] && !t.altKey && (37 === e ? (t.preventDefault(), P.click()) : 39 === e && (t.preventDefault(), K.click())) }), t.isFunction(t.fn.on) ? t(e).on("click." + Z, "." + tt, i) : t("." + tt).live("click." + Z, i)), !0) : !1 } function w() { var e, o, r, h = J.prep, d = ++lt; if (q = !0, U = !1, u(ht), u(it), _.get("onLoad"), _.h = _.get("height") ? a(_.get("height"), "y") - N - j : _.get("innerHeight") && a(_.get("innerHeight"), "y"), _.w = _.get("width") ? a(_.get("width"), "x") - z - D : _.get("innerWidth") && a(_.get("innerWidth"), "x"), _.mw = _.w, _.mh = _.h, _.get("maxWidth") && (_.mw = a(_.get("maxWidth"), "x") - z - D, _.mw = _.w && _.w < _.mw ? _.w : _.mw), _.get("maxHeight") && (_.mh = a(_.get("maxHeight"), "y") - N - j, _.mh = _.h && _.h < _.mh ? _.h : _.mh), e = _.get("href"), Q = setTimeout(function () { L.show() }, 100), _.get("inline")) { var c = t(e); r = t("<div>").hide().insertBefore(c), at.one(ht, function () { r.replaceWith(c) }), h(c) } else _.get("iframe") ? h(" ") : _.get("html") ? h(_.get("html")) : s(_, e) ? (e = l(_, e), U = _.get("createImg"), t(U).addClass(Z + "Photo").bind("error." + Z, function () { h(n(st, "Error").html(_.get("imgError"))) }).one("load", function () { d === lt && setTimeout(function () { var e; _.get("retinaImage") && i.devicePixelRatio > 1 && (U.height = U.height / i.devicePixelRatio, U.width = U.width / i.devicePixelRatio), _.get("scalePhotos") && (o = function () { U.height -= U.height * e, U.width -= U.width * e }, _.mw && U.width > _.mw && (e = (U.width - _.mw) / U.width, o()), _.mh && U.height > _.mh && (e = (U.height - _.mh) / U.height, o())), _.h && (U.style.marginTop = Math.max(_.mh - U.height, 0) / 2 + "px"), W[1] && (_.get("loop") || W[A + 1]) && (U.style.cursor = "pointer", t(U).bind("click." + Z, function () { J.next() })), U.style.width = U.width + "px", U.style.height = U.height + "px", h(U) }, 1) }), U.src = e) : e && M.load(e, _.get("data"), function (e, i) { d === lt && h("error" === i ? n(st, "Error").html(_.get("xhrError")) : t(this).contents()) }) } var v, x, y, b, T, C, H, k, W, E, I, M, L, F, R, S, K, P, B, O, _, j, D, N, z, A, U, $, q, G, Q, J, V, X = { html: !1, photo: !1, iframe: !1, inline: !1, transition: "elastic", speed: 300, fadeOut: 300, width: !1, initialWidth: "600", innerWidth: !1, maxWidth: !1, height: !1, initialHeight: "450", innerHeight: !1, maxHeight: !1, scalePhotos: !0, scrolling: !0, opacity: .9, preloading: !0, className: !1, overlayClose: !0, escKey: !0, arrowKey: !0, top: !1, bottom: !1, left: !1, right: !1, fixed: !1, data: void 0, closeButton: !0, fastIframe: !0, open: !1, reposition: !0, loop: !0, slideshow: !1, slideshowAuto: !0, slideshowSpeed: 2500, slideshowStart: "start slideshow", slideshowStop: "stop slideshow", photoRegex: /\.(gif|png|jp(e|g|eg)|bmp|ico|webp|jxr|svg)((#|\?).*)?$/i, retinaImage: !1, retinaUrl: !1, retinaSuffix: "@2x.$1", current: "image {current} of {total}", previous: "previous", next: "next", close: "close", xhrError: "This content failed to load.", imgError: "This image failed to load.", returnFocus: !0, trapFocus: !0, onOpen: !1, onLoad: !1, onComplete: !1, onCleanup: !1, onClosed: !1, rel: function () { return this.rel }, href: function () { return t(this).attr("href") }, title: function () { return this.title }, createImg: function () { var e = new Image, i = t(this).data("cbox-img-attrs"); return "object" == typeof i && t.each(i, function (t, i) { e[t] = i }), e }, createIframe: function () { var i = e.createElement("iframe"), n = t(this).data("cbox-iframe-attrs"); return "object" == typeof n && t.each(n, function (t, e) { i[t] = e }), "frameBorder" in i && (i.frameBorder = 0), "allowTransparency" in i && (i.allowTransparency = "true"), i.name = (new Date).getTime(), i.allowFullscreen = !0, i } }, Y = "colorbox", Z = "cbox", tt = Z + "Element", et = Z + "_open", it = Z + "_load", nt = Z + "_complete", ot = Z + "_cleanup", rt = Z + "_closed", ht = Z + "_purge", at = t("<a/>"), st = "div", lt = 0, dt = {}, ct = function () { function t() { clearTimeout(h) } function e() { (_.get("loop") || W[A + 1]) && (t(), h = setTimeout(J.next, _.get("slideshowSpeed"))) } function i() { S.html(_.get("slideshowStop")).unbind(s).one(s, n), at.bind(nt, e).bind(it, t), x.removeClass(a + "off").addClass(a + "on") } function n() { t(), at.unbind(nt, e).unbind(it, t), S.html(_.get("slideshowStart")).unbind(s).one(s, function () { J.next(), i() }), x.removeClass(a + "on").addClass(a + "off") } function o() { r = !1, S.hide(), t(), at.unbind(nt, e).unbind(it, t), x.removeClass(a + "off " + a + "on") } var r, h, a = Z + "Slideshow_", s = "click." + Z; return function () { r ? _.get("slideshow") || (at.unbind(ot, o), o()) : _.get("slideshow") && W[1] && (r = !0, at.one(ot, o), _.get("slideshowAuto") ? i() : n(), S.show()) } }(); t[Y] || (t(p), J = t.fn[Y] = t[Y] = function (e, i) { var n, o = this; return e = e || {}, t.isFunction(o) && (o = t("<a/>"), e.open = !0), o[0] ? (p(), m() && (i && (e.onComplete = i), o.each(function () { var i = t.data(this, Y) || {}; t.data(this, Y, t.extend(i, e)) }).addClass(tt), n = new r(o[0], e), n.get("open") && f(o[0])), o) : o }, J.position = function (e, i) { function n() { T[0].style.width = k[0].style.width = b[0].style.width = parseInt(x[0].style.width, 10) - D + "px", b[0].style.height = C[0].style.height = H[0].style.height = parseInt(x[0].style.height, 10) - j + "px" } var r, h, s, l = 0, d = 0, c = x.offset(); if (E.unbind("resize." + Z), x.css({ top: -9e4, left: -9e4 }), h = E.scrollTop(), s = E.scrollLeft(), _.get("fixed") ? (c.top -= h, c.left -= s, x.css({ position: "fixed" })) : (l = h, d = s, x.css({ position: "absolute" })), d += _.get("right") !== !1 ? Math.max(E.width() - _.w - z - D - a(_.get("right"), "x"), 0) : _.get("left") !== !1 ? a(_.get("left"), "x") : Math.round(Math.max(E.width() - _.w - z - D, 0) / 2), l += _.get("bottom") !== !1 ? Math.max(o() - _.h - N - j - a(_.get("bottom"), "y"), 0) : _.get("top") !== !1 ? a(_.get("top"), "y") : Math.round(Math.max(o() - _.h - N - j, 0) / 2), x.css({ top: c.top, left: c.left, visibility: "visible" }), y[0].style.width = y[0].style.height = "9999px", r = { width: _.w + z + D, height: _.h + N + j, top: l, left: d }, e) { var g = 0; t.each(r, function (t) { return r[t] !== dt[t] ? void (g = e) : void 0 }), e = g } dt = r, e || x.css(r), x.dequeue().animate(r, { duration: e || 0, complete: function () { n(), q = !1, y[0].style.width = _.w + z + D + "px", y[0].style.height = _.h + N + j + "px", _.get("reposition") && setTimeout(function () { E.bind("resize." + Z, J.position) }, 1), t.isFunction(i) && i() }, step: n }) }, J.resize = function (t) { var e; $ && (t = t || {}, t.width && (_.w = a(t.width, "x") - z - D), t.innerWidth && (_.w = a(t.innerWidth, "x")), I.css({ width: _.w }), t.height && (_.h = a(t.height, "y") - N - j), t.innerHeight && (_.h = a(t.innerHeight, "y")), t.innerHeight || t.height || (e = I.scrollTop(), I.css({ height: "auto" }), _.h = I.height()), I.css({ height: _.h }), e && I.scrollTop(e), J.position("none" === _.get("transition") ? 0 : _.get("speed"))) }, J.prep = function (i) { function o() { return _.w = _.w || I.width(), _.w = _.mw && _.mw < _.w ? _.mw : _.w, _.w } function a() { return _.h = _.h || I.height(), _.h = _.mh && _.mh < _.h ? _.mh : _.h, _.h } if ($) { var d, g = "none" === _.get("transition") ? 0 : _.get("speed"); I.remove(), I = n(st, "LoadedContent").append(i), I.hide().appendTo(M.show()).css({ width: o(), overflow: _.get("scrolling") ? "auto" : "hidden" }).css({ height: a() }).prependTo(b), M.hide(), t(U).css({ "float": "none" }), c(_.get("className")), d = function () { function i() { t.support.opacity === !1 && x[0].style.removeAttribute("filter") } var n, o, a = W.length; $ && (o = function () { clearTimeout(Q), L.hide(), u(nt), _.get("onComplete") }, F.html(_.get("title")).show(), I.show(), a > 1 ? ("string" == typeof _.get("current") && R.html(_.get("current").replace("{current}", A + 1).replace("{total}", a)).show(), K[_.get("loop") || a - 1 > A ? "show" : "hide"]().html(_.get("next")), P[_.get("loop") || A ? "show" : "hide"]().html(_.get("previous")), ct(), _.get("preloading") && t.each([h(-1), h(1)], function () { var i, n = W[this], o = new r(n, t.data(n, Y)), h = o.get("href"); h && s(o, h) && (h = l(o, h), i = e.createElement("img"), i.src = h) })) : O.hide(), _.get("iframe") ? (n = _.get("createIframe"), _.get("scrolling") || (n.scrolling = "no"), t(n).attr({ src: _.get("href"), "class": Z + "Iframe" }).one("load", o).appendTo(I), at.one(ht, function () { n.src = "//about:blank" }), _.get("fastIframe") && t(n).trigger("load")) : o(), "fade" === _.get("transition") ? x.fadeTo(g, 1, i) : i()) }, "fade" === _.get("transition") ? x.fadeTo(g, 0, function () { J.position(0, d) }) : J.position(g, d) } }, J.next = function () { !q && W[1] && (_.get("loop") || W[A + 1]) && (A = h(1), f(W[A])) }, J.prev = function () { !q && W[1] && (_.get("loop") || A) && (A = h(-1), f(W[A])) }, J.close = function () { $ && !G && (G = !0, $ = !1, u(ot), _.get("onCleanup"), E.unbind("." + Z), v.fadeTo(_.get("fadeOut") || 0, 0), x.stop().fadeTo(_.get("fadeOut") || 0, 0, function () { x.hide(), v.hide(), u(ht), I.remove(), setTimeout(function () { G = !1, u(rt), _.get("onClosed") }, 1) })) }, J.remove = function () { x && (x.stop(), t[Y].close(), x.stop(!1, !0).remove(), v.remove(), G = !1, x = null, t("." + tt).removeData(Y).removeClass(tt), t(e).unbind("click." + Z).unbind("keydown." + Z)) }, J.element = function () { return t(_.el) }, J.settings = X) }(jQuery, document, window);
//pjax
!function (t) { function e(e, r, a) { var o = this; return this.on("click.pjax", e, function (e) { var i = t.extend({}, m(r, a)); i.container || (i.container = t(this).attr("data-pjax") || o), n(e, i) }) } function n(e, n, r) { r = m(n, r); var o = e.currentTarget; if ("A" !== o.tagName.toUpperCase()) throw "$.fn.pjax or $.pjax.click requires an anchor element"; if (!(e.which > 1 || e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || location.protocol !== o.protocol || location.hostname !== o.hostname || o.href.indexOf("#") > -1 && h(o) == h(location) || e.isDefaultPrevented())) { var i = { url: o.href, container: t(o).attr("data-pjax"), target: o }, c = t.extend({}, i, r), s = t.Event("pjax:click"); t(o).trigger(s, [c]), s.isDefaultPrevented() || (a(c), e.preventDefault(), t(o).trigger("pjax:clicked", [c])) } } function r(e, n, r) { r = m(n, r); var o = e.currentTarget, i = t(o); if ("FORM" !== o.tagName.toUpperCase()) throw "$.pjax.submit requires a form element"; var c = { type: (i.attr("method") || "GET").toUpperCase(), url: i.attr("action"), container: i.attr("data-pjax"), target: o }; if ("GET" !== c.type && void 0 !== window.FormData) c.data = new FormData(o), c.processData = !1, c.contentType = !1; else { if (t(o).find(":file").length) return; c.data = t(o).serializeArray() } a(t.extend({}, c, r)), e.preventDefault() } function a(e) { function n(e, n, a) { a || (a = {}), a.relatedTarget = r; var o = t.Event(e, a); return c.trigger(o, n), !o.isDefaultPrevented() } e = t.extend(!0, {}, t.ajaxSettings, a.defaults, e), t.isFunction(e.url) && (e.url = e.url()); var r = e.target, o = d(e.url).hash, c = e.context = v(e.container); e.data || (e.data = {}), t.isArray(e.data) ? e.data.push({ name: "_pjax", value: c.selector }) : e.data._pjax = c.selector; var s; e.beforeSend = function (t, r) { if ("GET" !== r.type && (r.timeout = 0), t.setRequestHeader("X-PJAX", "true"), t.setRequestHeader("X-PJAX-Container", c.selector), !n("pjax:beforeSend", [t, r])) return !1; r.timeout > 0 && (s = setTimeout(function () { n("pjax:timeout", [t, e]) && t.abort("timeout") }, r.timeout), r.timeout = 0); var a = d(r.url); o && (a.hash = o), e.requestUrl = f(a) }, e.complete = function (t, r) { s && clearTimeout(s), n("pjax:complete", [t, r, e]), n("pjax:end", [t, e]) }, e.error = function (t, r, a) { var o = j("", t, e), c = n("pjax:error", [t, r, a, e]); "GET" == e.type && "abort" !== r && c && i(o.url) }, e.success = function (r, s, u) { var p = a.state, f = "function" == typeof t.pjax.defaults.version ? t.pjax.defaults.version() : t.pjax.defaults.version, h = u.getResponseHeader("X-PJAX-Version"), m = j(r, u, e), v = d(m.url); if (o && (v.hash = o, m.url = v.href), f && h && f !== h) return void i(m.url); if (!m.contents) return void i(m.url); a.state = { id: e.id || l(), url: m.url, title: m.title, container: c.selector, fragment: e.fragment, timeout: e.timeout }, (e.push || e.replace) && window.history.replaceState(a.state, m.title, m.url); var x = t.contains(e.container, document.activeElement); if (x) try { document.activeElement.blur() } catch (g) { } m.title && (document.title = m.title), n("pjax:beforeReplace", [m.contents, e], { state: a.state, previousState: p }), c.html(m.contents); var w = c.find("input[autofocus], textarea[autofocus]").last()[0]; w && document.activeElement !== w && w.focus(), y(m.scripts); var b = e.scrollTo; if (o) { var T = decodeURIComponent(o.slice(1)), E = document.getElementById(T) || document.getElementsByName(T)[0]; E && (b = t(E).offset().top) } "number" == typeof b && t(window).scrollTop(b), n("pjax:success", [r, s, u, e]) }, a.state || (a.state = { id: l(), url: window.location.href, title: document.title, container: c.selector, fragment: e.fragment, timeout: e.timeout }, window.history.replaceState(a.state, document.title)), u(a.xhr), a.options = e; var h = a.xhr = t.ajax(e); return h.readyState > 0 && (e.push && !e.replace && (w(a.state.id, p(c)), window.history.pushState(null, "", e.requestUrl)), n("pjax:start", [h, e]), n("pjax:send", [h, e])), a.xhr } function o(e, n) { var r = { url: window.location.href, push: !1, replace: !0, scrollTo: !1 }; return a(t.extend(r, m(e, n))) } function i(t) { window.history.replaceState(null, "", a.state.url), window.location.replace(t) } function c(e) { C || u(a.xhr); var n, r = a.state, o = e.state; if (o && o.container) { if (C && A == o.url) return; if (r) { if (r.id === o.id) return; n = r.id < o.id ? "forward" : "back" } var c = R[o.id] || [], s = t(c[0] || o.container), l = c[1]; if (s.length) { r && b(n, r.id, p(s)); var f = t.Event("pjax:popstate", { state: o, direction: n }); s.trigger(f); var d = { id: o.id, url: o.url, container: s, push: !1, fragment: o.fragment, timeout: o.timeout, scrollTo: !1 }; if (l) { s.trigger("pjax:start", [null, d]), a.state = o, o.title && (document.title = o.title); var h = t.Event("pjax:beforeReplace", { state: o, previousState: r }); s.trigger(h, [l, d]), s.html(l), s.trigger("pjax:end", [null, d]) } else a(d); s[0].offsetHeight } else i(location.href) } C = !1 } function s(e) { var n = t.isFunction(e.url) ? e.url() : e.url, r = e.type ? e.type.toUpperCase() : "GET", a = t("<form>", { method: "GET" === r ? "GET" : "POST", action: n, style: "display:none" }); "GET" !== r && "POST" !== r && a.append(t("<input>", { type: "hidden", name: "_method", value: r.toLowerCase() })); var o = e.data; if ("string" == typeof o) t.each(o.split("&"), function (e, n) { var r = n.split("="); a.append(t("<input>", { type: "hidden", name: r[0], value: r[1] })) }); else if (t.isArray(o)) t.each(o, function (e, n) { a.append(t("<input>", { type: "hidden", name: n.name, value: n.value })) }); else if ("object" == typeof o) { var i; for (i in o) a.append(t("<input>", { type: "hidden", name: i, value: o[i] })) } t(document.body).append(a), a.submit() } function u(e) { e && e.readyState < 4 && (e.onreadystatechange = t.noop, e.abort()) } function l() { return (new Date).getTime() } function p(t) { var e = t.clone(); return e.find("script").each(function () { this.src || jQuery._data(this, "globalEval", !1) }), [t.selector, e.contents()] } function f(t) { return t.search = t.search.replace(/([?&])(_pjax|_)=[^&]*/g, ""), t.href.replace(/\?($|#)/, "$1") } function d(t) { var e = document.createElement("a"); return e.href = t, e } function h(t) { return t.href.replace(/#.*/, "") } function m(e, n) { return e && n ? n.container = e : n = t.isPlainObject(e) ? e : { container: e }, n.container && (n.container = v(n.container)), n } function v(e) { if (e = t(e), e.length) { if ("" !== e.selector && e.context === document) return e; if (e.attr("id")) return t("#" + e.attr("id")); throw "cant get selector for pjax container!" } throw "no pjax container for " + e.selector } function x(t, e) { return t.filter(e).add(t.find(e)) } function g(e) { return t.parseHTML(e, document, !0) } function j(e, n, r) { var a = {}, o = /<html/i.test(e), i = n.getResponseHeader("X-PJAX-URL"); if (a.url = i ? f(d(i)) : r.requestUrl, o) var c = t(g(e.match(/<head[^>]*>([\s\S.]*)<\/head>/i)[0])), s = t(g(e.match(/<body[^>]*>([\s\S.]*)<\/body>/i)[0])); else var c = s = t(g(e)); if (0 === s.length) return a; if (a.title = x(c, "title").last().text(), r.fragment) { if ("body" === r.fragment) var u = s; else var u = x(s, r.fragment).first(); u.length && (a.contents = "body" === r.fragment ? u : u.contents(), a.title || (a.title = u.attr("title") || u.data("title"))) } else o || (a.contents = s); return a.contents && (a.contents = a.contents.not(function () { return t(this).is("title") }), a.contents.find("title").remove(), a.scripts = x(a.contents, "script[src]").remove(), a.contents = a.contents.not(a.scripts)), a.title && (a.title = t.trim(a.title)), a } function y(e) { if (e) { var n = t("script[src]"); e.each(function () { var e = this.src, r = n.filter(function () { return this.src === e }); if (!r.length) { var a = document.createElement("script"), o = t(this).attr("type"); o && (a.type = o), a.src = t(this).attr("src"), document.head.appendChild(a) } }) } } function w(t, e) { R[t] = e, X.push(t), T(U, 0), T(X, a.defaults.maxCacheLength) } function b(t, e, n) { var r, o; R[e] = n, "forward" === t ? (r = X, o = U) : (r = U, o = X), r.push(e), (e = o.pop()) && delete R[e], T(r, a.defaults.maxCacheLength) } function T(t, e) { for (; t.length > e;) delete R[t.shift()] } function E() { return t("meta").filter(function () { var e = t(this).attr("http-equiv"); return e && "X-PJAX-VERSION" === e.toUpperCase() }).attr("content") } function S() { t.fn.pjax = e, t.pjax = a, t.pjax.enable = t.noop, t.pjax.disable = P, t.pjax.click = n, t.pjax.submit = r, t.pjax.reload = o, t.pjax.defaults = { timeout: 650, push: !0, replace: !1, type: "GET", dataType: "html", scrollTo: 0, maxCacheLength: 20, version: E }, t(window).on("popstate.pjax", c) } function P() { t.fn.pjax = function () { return this }, t.pjax = s, t.pjax.enable = S, t.pjax.disable = t.noop, t.pjax.click = t.noop, t.pjax.submit = t.noop, t.pjax.reload = function () { window.location.reload() }, t(window).off("popstate.pjax", c) } var C = !0, A = window.location.href, D = window.history.state; D && D.container && (a.state = D), "state" in window.history && (C = !1); var R = {}, U = [], X = []; t.inArray("state", t.event.props) < 0 && t.event.props.push("state"), t.support.pjax = window.history && window.history.pushState && window.history.replaceState && !navigator.userAgent.match(/((iPod|iPhone|iPad).+\bOS\s+[1-4]\D|WebApps\/.+CFNetwork)/), t.support.pjax ? S() : P() }(jQuery);
//twitter web intents
window.twttr = function (t, e, r) { var n, i = t.getElementsByTagName(e)[0], w = window.twttr || {}; return t.getElementById(r) ? w : (n = t.createElement(e), n.id = r, n.src = "https://platform.twitter.com/widgets.js", i.parentNode.insertBefore(n, i), w._e = [], w.ready = function (t) { w._e.push(t) }, w) }(document, "script", "twitter-wjs");
